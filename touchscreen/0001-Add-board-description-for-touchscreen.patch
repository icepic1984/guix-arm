From 2426b961f1eab84895b65017a6cb6748bc0274ed Mon Sep 17 00:00:00 2001
From: Christoph Buck <christoph.buck@smartoptics.de>
Date: Thu, 11 Apr 2024 18:22:28 +0200
Subject: [PATCH] Add initial board setup

---
 arch/arm/dts/imx6dl-so.dts                  | 776 ++++++++++++++++++++
 arch/arm/mach-imx/mx6/Kconfig               |   5 +
 board/smartoptics/touchscreen/Kconfig       |  16 +
 board/smartoptics/touchscreen/Makefile      |   8 +
 board/smartoptics/touchscreen/imximage.cfg  | 187 +++++
 board/smartoptics/touchscreen/touchscreen.c |  86 +++
 build.sh                                    |   8 +
 configs/touchscreen_defconfig               | 133 ++++
 cptftp.sh                                   |  27 +
 extlinux.conf                               |  29 +
 include/configs/mx6exceet_common.h          | 399 ++++++++++
 include/configs/touchscreen.h               |  66 ++
 include/configs/touchscreen.h.bk            |  64 ++
 include/configs/touchscreen_common.h        | 399 ++++++++++
 tools/Kconfig                               |   4 +-
 15 files changed, 2205 insertions(+), 2 deletions(-)
 create mode 100755 arch/arm/dts/imx6dl-so.dts
 create mode 100644 board/smartoptics/touchscreen/Kconfig
 create mode 100644 board/smartoptics/touchscreen/Makefile
 create mode 100644 board/smartoptics/touchscreen/imximage.cfg
 create mode 100644 board/smartoptics/touchscreen/touchscreen.c
 create mode 100755 build.sh
 create mode 100644 configs/touchscreen_defconfig
 create mode 100755 cptftp.sh
 create mode 100644 extlinux.conf
 create mode 100644 include/configs/mx6exceet_common.h
 create mode 100644 include/configs/touchscreen.h
 create mode 100644 include/configs/touchscreen.h.bk
 create mode 100644 include/configs/touchscreen_common.h

diff --git a/arch/arm/dts/imx6dl-so.dts b/arch/arm/dts/imx6dl-so.dts
new file mode 100755
index 0000000000..0ecf11a8be
--- /dev/null
+++ b/arch/arm/dts/imx6dl-so.dts
@@ -0,0 +1,776 @@
+/*
+ * Copyright 2020 Kontron Electronics GmbH
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ */
+ 
+/dts-v1/;
+
+#include <dt-bindings/gpio/gpio.h>
+#include <dt-bindings/sound/fsl-imx-audmux.h>
+#include <dt-bindings/regulator/dlg,da9063-regulator.h>
+#include "imx6q.dtsi"
+
+/ {
+	model = "iMXceet Dual K";
+
+	compatible = "fsl,imx6q";
+
+	chosen {
+		stdout-path = &uart2;
+	};
+
+	aliases {
+		ethernet1 = &usbnet;
+		ipu1 = &ipu1;
+	};
+
+	memory {
+		reg = <0x10000000 0x10000000>;
+	};
+
+	rgb_backlight: rgb-backlight {
+		compatible = "pwm-backlight";
+		pwms = <&pwm3 0 5000000>; /* period = 5000000 ns => f = 200 Hz */
+		brightness-levels = <	 0  1  2  3  4  5  6  7  8  9
+					10 11 12 13 14 15 16 17 18 19
+					20 21 22 23 24 25 26 27 28 29
+					30 31 32 33 34 35 36 37 38 39
+					40 41 42 43 44 45 46 47 48 49
+					50 51 52 53 54 55 56 57 58 59
+					60 61 62 63 64 65 66 67 68 69
+					70 71 72 73 74 75 76 77 78 79
+					80 81 82 83 84 85 86 87 88 89
+					90 91 92 93 94 95 96 97 98 99 100 >;
+		default-brightness-level = <100>;
+		status = "okay";
+	};
+
+display0: disp0 {
+		compatible = "fsl,imx-parallel-display";
+		interface-pix-fmt = "rgb24";
+		#address-cells = <1>;
+		#size-cells = <0>;
+		pinctrl-names = "default";
+		pinctrl-0 = <&pinctrl_rgb24_display>;
+		status = "okay";
+
+		port@0 {
+			reg = <0>;
+
+			rgb_encoder_in: endpoint {
+				remote-endpoint = <&ipu1_di0_disp0>;
+			};
+		};
+
+		port@1 {
+			reg = <1>;
+
+			rgb_encoder_out: endpoint {
+				remote-endpoint = <&rgb_panel_in>;
+			};
+		};
+	};
+
+	panel_rgb: panel_rgb {
+		compatible = "vxt,vl050-8048nt-c01";
+		backlight = <&rgb_backlight>;
+
+		status = "okay";
+		port {
+			rgb_panel_in: endpoint {
+				remote-endpoint = <&rgb_encoder_out>;
+			};
+		};
+	};
+
+	leds {
+		compatible = "gpio-leds";
+		pinctrl-names = "default";
+		pinctrl-0 = <&pinctrl_leds>;
+
+		user {
+			label = "debug";
+			gpios = <&gpio5 21 GPIO_ACTIVE_LOW>;
+			linux,default-trigger = "heartbeat";
+		};
+	};
+
+	pwm-beeper {
+		compatible = "pwm-beeper";
+		pwms = <&pwm4 0 5000>;
+	};
+
+	clocks {
+		codec_osc: anaclk2 {
+			compatible = "fixed-clock";
+			#clock-cells = <0>;
+			clock-frequency = <24000000>;
+		};
+	};
+
+	regulators {
+		compatible = "simple-bus";
+		#address-cells = <1>;
+		#size-cells = <0>;
+		pinctrl-names = "default";
+		pinctrl-0 = <&pinctrl_regulators>;
+
+		reg_usb_h1_vbus: regulator@0 {
+			compatible = "regulator-fixed";
+			reg = <0>;
+			regulator-name = "usb_h1_vbus";
+			regulator-min-microvolt = <5000000>;
+			regulator-max-microvolt = <5000000>;
+			gpio = <&gpio1 0 GPIO_ACTIVE_LOW>;
+		};
+
+		reg_usb_h2_vbus: regulator@1 {
+			compatible = "regulator-fixed";
+			reg = <1>;
+			regulator-name = "usb_h2_vbus";
+			regulator-min-microvolt = <5000000>;
+			regulator-max-microvolt = <5000000>;
+			regulator-always-on;
+		};
+
+		reg_usb_otg_vbus: regulator@2 {
+			compatible = "regulator-fixed";
+			reg = <2>;
+			regulator-name = "usb_otg_vbus";
+			regulator-min-microvolt = <5000000>;
+			regulator-max-microvolt = <5000000>;
+			gpio = <&gpio4 15 GPIO_ACTIVE_LOW>;
+		};
+		
+		reg_hdmi_ctp_enable: regulator@3 {
+			compatible = "regulator-fixed";
+			reg = <3>;
+			regulator-name = "hdmi_ctp_enable";
+			regulator-min-microvolt = <5000000>;
+			regulator-max-microvolt = <5000000>;
+			gpio = <&gpio2 16 0>;
+			enable-active-high;
+			regulator-always-on;
+		};
+	};
+};
+
+&hdmi {
+	ddc-i2c-bus = <&i2c2>;
+	status = "okay";
+};
+
+
+&ssi2 {
+	status = "okay";
+};
+
+// I2C on LVDS display connector for touch devices
+&i2c1 {
+	status = "okay";
+	clock-frequency = <100000>;
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_i2c1>;
+
+	gt911@5d {
+		compatible = "goodix,gt928";
+		reg = <0x5d>;
+		interrupt-parent = <&gpio1>;
+		interrupts = <2 8>;
+		reset-gpios = <&gpio1 23 0>;
+		irq-gpios = <&gpio1 2 0>;
+	};
+
+};
+
+// PMIC and HDMI edid
+&i2c2 {
+	status = "okay";
+	clock-frequency = <100000>;
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_i2c2>;
+};
+
+&i2c3 {
+	status = "okay";
+	clock-frequency = <100000>;
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_i2c3>;
+	
+	/* RTC RX-8900 */
+	rtc@32 {
+		compatible = "epson,rx8900";
+		reg = <0x32>;
+		interrupt-parent = <&gpio2>;
+		interrupts = <17>;
+	};
+	
+		pmic0: da9061@58 {
+		compatible = "dlg,da9061";
+		reg = <0x58>;
+		pinctrl-names = "default";
+		pinctrl-0 = <&pinctrl_pmic>;
+		interrupt-parent = <&gpio2>;
+		interrupts = <18 IRQ_TYPE_LEVEL_LOW>;
+		interrupt-controller;
+
+		regulators {
+			da9061_buck1: buck1 {
+				regulator-name = "buck1";
+				regulator-min-microvolt = <1350000>;
+				regulator-max-microvolt = <1350000>;
+				regulator-initial-mode = <DA9063_BUCK_MODE_SYNC>;
+				regulator-always-on;
+			};
+
+			da9061_buck2: buck2 {
+				regulator-name = "buck2";
+				regulator-min-microvolt = <3300000>;
+				regulator-max-microvolt = <3300000>;
+				regulator-initial-mode = <DA9063_BUCK_MODE_SYNC>;
+				regulator-always-on;
+			};
+
+			da9061_buck3: buck3 {
+				regulator-name = "buck3";
+				regulator-min-microvolt = <1500000>;
+				regulator-max-microvolt = <1500000>;
+				regulator-initial-mode = <DA9063_BUCK_MODE_SYNC>;
+				regulator-always-on;
+			};
+			
+			da9061_buck4: buck4 {
+				regulator-name = "buck4";
+				regulator-min-microvolt = <1500000>;
+				regulator-max-microvolt = <1500000>;
+				regulator-initial-mode = <DA9063_BUCK_MODE_SYNC>;
+				regulator-always-on;
+			};
+
+			da9061_ldo1: ldo1 {
+				regulator-name = "ldo1";
+				regulator-min-microvolt = <2500000>;
+				regulator-max-microvolt = <2500000>;
+			};
+
+			da9061_ldo2: ldo2 {
+				regulator-name = "ldo2";
+				regulator-min-microvolt = <3300000>;
+				regulator-max-microvolt = <3300000>;
+				regulator-boot-on;
+				regulator-always-on;
+			};
+
+			da9061_ldo3: ldo3 {
+				regulator-name = "ldo3";
+				regulator-min-microvolt = <1800000>;
+				regulator-max-microvolt = <1800000>;
+			};
+
+			da9061_ldo4: ldo4 {
+				regulator-name = "ldo4";
+				regulator-min-microvolt = <1200000>;
+				regulator-max-microvolt = <1200000>;
+				regulator-boot-on;
+				regulator-always-on;
+			};
+		};
+
+		thermal {
+			compatible = "dlg,da9061-thermal", "dlg,da9062-thermal";
+			polling-delay-passive = <3000>;
+		};
+	};
+	
+
+};
+
+&ipu1 {
+	clocks = <&clks IMX6QDL_CLK_IPU1>,
+		<&clks IMX6QDL_CLK_IPU1_DI0>,
+		<&clks IMX6QDL_CLK_IPU1_DI1>,
+		<&clks IMX6QDL_CLK_IPU1_DI0_SEL>,
+		<&clks IMX6QDL_CLK_IPU1_DI1_SEL>,
+		<&clks IMX6QDL_CLK_LDB_DI0>,
+		<&clks IMX6QDL_CLK_LDB_DI1>;
+	clock-names = "bus", "di0", "di1", "di0_sel", "di1_sel", "ldb_di0", "ldb_di1";
+};
+
+&ipu1_di0_disp0 {
+	remote-endpoint = <&rgb_encoder_in>;
+};
+
+&pwm3 {
+	#pwm-cells = <2>;
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_pwm3>;
+	status = "okay";
+};
+
+&pwm4 {
+	#pwm-cells = <2>;
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_pwm4>;
+	status = "okay";
+};
+
+// DEBUG
+&uart2 {
+	status = "okay";
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_uart2>;
+};
+
+// Extension
+&uart3 {
+	status = "okay";
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_uart3>;
+};
+
+// RS485
+&uart4 {
+	status = "okay";
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_uart4>;
+	linux,rs485-enabled-at-boot-time;
+	uart-has-rtscts;
+};
+
+// RS232
+&uart5 {
+	status = "okay";
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_uart5>;
+};
+
+// USB-Host
+&usbh1 {
+	vbus-supply = <&reg_usb_h1_vbus>;
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_usbh1>;
+	dr_mode = "host";
+	status = "okay";
+	
+	usb1@1 {
+		compatible = "usb424,9514";
+		reg = <1>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+
+		usbnet: usbether@1 {
+			compatible = "usb424,ec00";
+			reg = <1>;
+			local-mac-address = [00 00 00 00 00 00];
+		};
+	};	
+};
+
+// USB-OTG
+&usbotg {
+	vbus-supply = <&reg_usb_otg_vbus>;
+	pinctrl-names = "default";
+	// ID-Pin is not connected
+	// pinctrl-0 = <&pinctrl_usbotg>;
+	disable-over-current;
+	dr_mode = "peripheral";
+	status = "okay";
+};
+
+// CAN
+&can1 {
+	status = "okay";
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_can1>;
+};
+
+// NOR Flash
+&ecspi2 {
+	fsl,spi-num-chipselects = <1>;
+	cs-gpios = <&gpio5 29 0>;
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_ecspi2>;
+	status = "okay";
+
+	flash: m25p80@0 {
+		compatible = "jedec,spi-nor";
+		spi-max-frequency = <20000000>;
+		reg = <0>;
+	};
+};
+
+// SD-Card slot
+&usdhc2 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_usdhc2>;
+	status = "okay";
+};
+
+//eMMC
+&usdhc1 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_usdhc1>;
+	bus-width = <8>;
+	status = "okay";
+};
+
+
+&wdog1 {
+	status = "okay";
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_wdog>;
+	fsl,ext-reset-output;
+};
+
+&fec {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_enet>;
+	phy-mode = "rmii";
+	phy-reset-gpios = <&gpio5 2 GPIO_ACTIVE_LOW>;
+	phy-handle = <&ethphy>;
+	status = "okay";
+
+	mdio {
+		#address-cells = <1>;
+		#size-cells = <0>;
+
+		ethphy: ethernet-phy@1 {
+			reg = <1>;
+			clocks = <&clks IMX6QDL_CLK_ENET_REF>;
+			clock-names = "rmii-ref";
+		};
+	};
+};
+
+&iomuxc {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_gpio>;
+
+	pinctrl_sound: sound {
+		fsl,pins = <
+			MX6QDL_PAD_NANDF_CS2__CCM_CLKO2		0x130b0 /* WM8510 MCLK */
+		>;
+	};
+
+	pinctrl_leds: ledsgrp {
+		fsl,pins = <
+			MX6QDL_PAD_CSI0_VSYNC__GPIO5_IO21	0x80000000
+		>;
+	};
+
+	pinctrl_regulators: regulators {
+		fsl,pins = <
+			MX6QDL_PAD_KEY_ROW4__GPIO4_IO15		0x130b0
+			
+		>;
+	};
+
+	pinctrl_pmic: pmic {
+		fsl,pins = <
+			MX6QDL_PAD_EIM_A20__GPIO2_IO18		0x1b0b0
+		>;
+	};
+
+	pinctrl_gpio: gpio {
+		fsl,pins = <
+			/* DIO1 */
+			MX6QDL_PAD_GPIO_19__GPIO4_IO05		0x1b0b0	/* output */
+			MX6QDL_PAD_KEY_COL2__GPIO4_IO10		0x1b0b0	/* input */
+
+			/* DIO2 */
+			MX6QDL_PAD_KEY_ROW2__GPIO4_IO11		0x1b0b0	/* output */
+			MX6QDL_PAD_CSI0_DAT6__GPIO5_IO24	0x1b0b0	/* input */
+
+			/* DIO3 */
+			MX6QDL_PAD_CSI0_DAT7__GPIO5_IO25	0x1b0b0	/* output */
+			MX6QDL_PAD_GPIO_17__GPIO7_IO12		0x1b0b0	/* input */
+
+			/* DIO4 */
+			MX6QDL_PAD_CSI0_DAT5__GPIO5_IO23	0x1b0b0	/* output */
+			MX6QDL_PAD_CSI0_DAT4__GPIO5_IO22  	0x1b0b0	/* input */
+			
+			MX6QDL_PAD_EIM_A22__GPIO2_IO16	0x1b0b0 /* hdmi ctp */
+		>;
+	};
+
+	pinctrl_enet: enetgrp {
+		fsl,pins = <
+			MX6QDL_PAD_ENET_MDIO__ENET_MDIO			0x1b0b0
+			MX6QDL_PAD_ENET_MDC__ENET_MDC			0x1b0b0
+			MX6QDL_PAD_ENET_RXD0__ENET_RX_DATA0		0x1b0b0
+			MX6QDL_PAD_ENET_RXD1__ENET_RX_DATA1		0x1b0b0
+			MX6QDL_PAD_ENET_CRS_DV__ENET_RX_EN		0x1b0b0
+			MX6QDL_PAD_ENET_RX_ER__ENET_RX_ER		0x1b0b0
+			MX6QDL_PAD_ENET_TXD0__ENET_TX_DATA0		0x1b0b0
+			MX6QDL_PAD_ENET_TXD1__ENET_TX_DATA1		0x1b0b0
+			MX6QDL_PAD_ENET_TX_EN__ENET_TX_EN		0x1b0b0
+			MX6QDL_PAD_GPIO_16__ENET_REF_CLK		0x4001b0a8
+			MX6QDL_PAD_EIM_A25__GPIO5_IO02			0x100b1	/* PHY-RST */
+			MX6QDL_PAD_CSI0_PIXCLK__GPIO5_IO18		0x1b0b0	/* ETH Interrupt */
+		>;
+	};
+
+	pinctrl_ecspi1: ecspi1grp {
+		fsl,pins = <
+			MX6QDL_PAD_CSI0_DAT6__ECSPI1_MISO		0x100b1
+			MX6QDL_PAD_CSI0_DAT5__ECSPI1_MOSI 		0x100b1
+			MX6QDL_PAD_CSI0_DAT4__ECSPI1_SCLK 		0x100b1
+		>;
+	};
+
+	pinctrl_ecspi2: ecspi2grp {
+		fsl,pins = <
+			MX6QDL_PAD_CSI0_DAT10__ECSPI2_MISO		0x100b1
+			MX6QDL_PAD_CSI0_DAT9__ECSPI2_MOSI		0x100b1
+			MX6QDL_PAD_CSI0_DAT8__ECSPI2_SCLK		0x100b1
+			MX6QDL_PAD_CSI0_DAT11__GPIO5_IO29		0x100b1	/* ECSPI2-CS1 */
+		>;
+	};
+
+	pinctrl_esai: esaigrp {
+		fsl,pins = <
+			MX6QDL_PAD_ENET_CRS_DV__ESAI_TX_CLK		0x1b030
+			MX6QDL_PAD_ENET_RXD1__ESAI_TX_FS		0x1b030
+			MX6QDL_PAD_ENET_MDC__ESAI_TX5_RX0		0x1b030
+			MX6QDL_PAD_GPIO_17__ESAI_TX0			0x1b030
+			MX6QDL_PAD_GPIO_9__ESAI_RX_FS			0x1b030
+		>;
+	};
+	
+
+
+	pinctrl_i2c1: i2c1grp {
+		fsl,pins = <
+			MX6QDL_PAD_EIM_D21__I2C1_SCL			0x4001b8b1
+			MX6QDL_PAD_EIM_D28__I2C1_SDA			0x4001b8b1
+		>;
+	};
+
+	pinctrl_i2c2: i2c2grp {
+		fsl,pins = <
+			MX6QDL_PAD_KEY_COL3__I2C2_SCL 			0x4001b8b1
+			MX6QDL_PAD_KEY_ROW3__I2C2_SDA 			0x4001b8b1
+		>;
+	};
+
+	pinctrl_i2c3: i2c3grp {
+		fsl,pins = <
+			MX6QDL_PAD_GPIO_5__I2C3_SCL 			0x4001b8b1
+			MX6QDL_PAD_GPIO_6__I2C3_SDA 			0x4001b8b1
+		>;
+	};
+	
+	pinctrl_rgb24_display: ipudisp1grp {
+		fsl,pins = <
+			MX6QDL_PAD_DI0_DISP_CLK__IPU1_DI0_DISP_CLK	0x1b088
+			MX6QDL_PAD_DI0_PIN15__IPU1_DI0_PIN15		0x1b088
+			MX6QDL_PAD_DI0_PIN2__IPU1_DI0_PIN02   		0x1b088
+			MX6QDL_PAD_DI0_PIN3__IPU1_DI0_PIN03   		0x1b088
+			MX6QDL_PAD_DISP0_DAT0__IPU1_DISP0_DATA00  	0x1b088
+			MX6QDL_PAD_DISP0_DAT1__IPU1_DISP0_DATA01  	0x1b088
+			MX6QDL_PAD_DISP0_DAT2__IPU1_DISP0_DATA02  	0x1b088
+			MX6QDL_PAD_DISP0_DAT3__IPU1_DISP0_DATA03  	0x1b088
+			MX6QDL_PAD_DISP0_DAT4__IPU1_DISP0_DATA04  	0x1b088
+			MX6QDL_PAD_DISP0_DAT5__IPU1_DISP0_DATA05  	0x1b088
+			MX6QDL_PAD_DISP0_DAT6__IPU1_DISP0_DATA06  	0x1b088
+			MX6QDL_PAD_DISP0_DAT7__IPU1_DISP0_DATA07  	0x1b088
+			MX6QDL_PAD_DISP0_DAT8__IPU1_DISP0_DATA08  	0x1b088
+			MX6QDL_PAD_DISP0_DAT9__IPU1_DISP0_DATA09  	0x1b088
+			MX6QDL_PAD_DISP0_DAT10__IPU1_DISP0_DATA10  	0x1b088
+			MX6QDL_PAD_DISP0_DAT11__IPU1_DISP0_DATA11  	0x1b088
+			MX6QDL_PAD_DISP0_DAT12__IPU1_DISP0_DATA12  	0x1b088
+			MX6QDL_PAD_DISP0_DAT13__IPU1_DISP0_DATA13  	0x1b088
+			MX6QDL_PAD_DISP0_DAT14__IPU1_DISP0_DATA14  	0x1b088
+			MX6QDL_PAD_DISP0_DAT15__IPU1_DISP0_DATA15  	0x1b088
+			MX6QDL_PAD_DISP0_DAT16__IPU1_DISP0_DATA16  	0x1b088
+			MX6QDL_PAD_DISP0_DAT17__IPU1_DISP0_DATA17  	0x1b088
+			MX6QDL_PAD_DISP0_DAT18__IPU1_DISP0_DATA18  	0x1b088
+			MX6QDL_PAD_DISP0_DAT19__IPU1_DISP0_DATA19  	0x1b088
+			MX6QDL_PAD_DISP0_DAT20__IPU1_DISP0_DATA20  	0x1b088
+			MX6QDL_PAD_DISP0_DAT21__IPU1_DISP0_DATA21  	0x1b088
+			MX6QDL_PAD_DISP0_DAT22__IPU1_DISP0_DATA22  	0x1b088
+			MX6QDL_PAD_DISP0_DAT23__IPU1_DISP0_DATA23  	0x1b088
+		>;
+	};
+
+	pinctrl_pwm3: pwm3grp {
+		fsl,pins = <
+			MX6QDL_PAD_SD4_DAT1__PWM3_OUT			0x1b0b1
+		>;
+	};
+
+
+	pinctrl_pwm4: pwm4grp {
+		fsl,pins = <
+			MX6QDL_PAD_SD4_DAT2__PWM4_OUT			0x1b0b1
+		>;
+	};
+
+	pinctrl_uart2: uart2grp {
+		fsl,pins = <
+			MX6QDL_PAD_SD4_DAT7__UART2_TX_DATA		0x1b0b1
+			MX6QDL_PAD_SD4_DAT4__UART2_RX_DATA		0x1b0b1
+		>;
+	};
+
+	pinctrl_uart3: uart3grp {
+		fsl,pins = <
+			MX6QDL_PAD_EIM_D24__UART3_TX_DATA		0x1b0b1
+			MX6QDL_PAD_EIM_D25__UART3_RX_DATA		0x1b0b1
+		>;
+	};
+
+	pinctrl_uart4: uart4grp {
+		fsl,pins = <
+			MX6QDL_PAD_CSI0_DAT12__UART4_TX_DATA		0x1b0b1
+			MX6QDL_PAD_CSI0_DAT13__UART4_RX_DATA		0x1b0b1
+			MX6QDL_PAD_CSI0_DAT17__UART4_CTS_B		0x1b0b1
+			/*
+			 * mux unused RTS to make sure it doesn't cause
+			 * any interrupts when it is undefined
+			 */
+			MX6QDL_PAD_CSI0_DAT16__UART4_RTS_B		0x1b0b1
+		>;
+	};
+
+	pinctrl_uart5: uart5grp {
+		fsl,pins = <
+			MX6QDL_PAD_CSI0_DAT14__UART5_TX_DATA		0x1b0b1
+			MX6QDL_PAD_CSI0_DAT15__UART5_RX_DATA		0x1b0b1
+		>;
+	};
+
+	pinctrl_usbh1: usbh1grp {
+		fsl,pins = <
+			MX6QDL_PAD_GPIO_0__GPIO1_IO00		0x1b0b0
+			MX6QDL_PAD_GPIO_3__USB_H1_OC		0x1b0b0
+		>;
+	};
+
+	pinctrl_usbh2_idle: usbh2grp-idle {
+		fsl,pins = <
+			MX6QDL_PAD_RGMII_TXC__USB_H2_DATA		0x40013030
+			MX6QDL_PAD_RGMII_TX_CTL__USB_H2_STROBE		0x40013030
+		>;
+	};
+
+	pinctrl_usbh2_active: usbh2grp-active {
+		fsl,pins = <
+			MX6QDL_PAD_RGMII_TXC__USB_H2_DATA		0x40013030
+			MX6QDL_PAD_RGMII_TX_CTL__USB_H2_STROBE		0x40017030
+		>;
+	};
+
+	pinctrl_usbotg: usbotggrp {
+		fsl,pins = <
+			MX6QDL_PAD_GPIO_1__USB_OTG_ID		0x17059
+		>;
+	};
+
+	pinctrl_usdhc1: usdhc1grp {
+		fsl,pins = <
+			MX6QDL_PAD_SD1_CMD__SD1_CMD				0x17059
+			MX6QDL_PAD_SD1_CLK__SD1_CLK				0x10059
+			MX6QDL_PAD_SD1_DAT0__SD1_DATA0				0x17059
+			MX6QDL_PAD_SD1_DAT1__SD1_DATA1			0x17059
+			MX6QDL_PAD_SD1_DAT2__SD1_DATA2			0x17059
+			MX6QDL_PAD_SD1_DAT3__SD1_DATA3			0x17059
+			MX6QDL_PAD_NANDF_D0__SD1_DATA4			0x17059
+			MX6QDL_PAD_NANDF_D1__SD1_DATA5			0x17059
+			MX6QDL_PAD_NANDF_D2__SD1_DATA6			0x17059
+			MX6QDL_PAD_NANDF_D3__SD1_DATA7			0x17059
+			>;
+		};
+	
+
+	pinctrl_usdhc2: usdhc2grp {
+		fsl,pins = <
+			MX6QDL_PAD_SD2_CMD__SD2_CMD			0x17059
+			MX6QDL_PAD_SD2_CLK__SD2_CLK			0x10059
+			MX6QDL_PAD_SD2_DAT0__SD2_DATA0		0x17059
+			MX6QDL_PAD_SD2_DAT1__SD2_DATA1		0x17059
+			MX6QDL_PAD_SD2_DAT2__SD2_DATA2		0x17059
+			MX6QDL_PAD_SD2_DAT3__SD2_DATA3		0x17059
+		>;
+	};
+
+
+     	// eMMC
+	pinctrl_usdhc3: usdhc3grp {
+		fsl,pins = <		
+			MX6QDL_PAD_SD3_CMD__SD3_CMD                0x17049
+			MX6QDL_PAD_SD3_CLK__SD3_CLK                0x10049
+			MX6QDL_PAD_SD3_DAT0__SD3_DATA0             0x17049
+			MX6QDL_PAD_SD3_DAT1__SD3_DATA1             0x17049
+			MX6QDL_PAD_SD3_DAT2__SD3_DATA2             0x17049
+			MX6QDL_PAD_SD3_DAT3__SD3_DATA3             0x17049
+			MX6QDL_PAD_SD3_DAT4__SD3_DATA4             0x17049
+			MX6QDL_PAD_SD3_DAT5__SD3_DATA5             0x17049
+			MX6QDL_PAD_SD3_DAT6__SD3_DATA6             0x17049
+			MX6QDL_PAD_SD3_DAT7__SD3_DATA7             0x17049
+			MX6QDL_PAD_SD3_RST__SD3_RESET              0x11059
+			
+		>;
+	};
+	
+		pinctrl_usdhc3_100mhz: usdhc3grp_100mhz {
+		fsl,pins = <		
+			MX6QDL_PAD_SD3_CMD__SD3_CMD                0x17089
+			MX6QDL_PAD_SD3_CLK__SD3_CLK                0x10089
+			MX6QDL_PAD_SD3_DAT0__SD3_DATA0             0x17089
+			MX6QDL_PAD_SD3_DAT1__SD3_DATA1             0x17089
+			MX6QDL_PAD_SD3_DAT2__SD3_DATA2             0x17089
+			MX6QDL_PAD_SD3_DAT3__SD3_DATA3             0x17089
+			MX6QDL_PAD_SD3_DAT4__SD3_DATA4             0x17089
+			MX6QDL_PAD_SD3_DAT5__SD3_DATA5             0x17089
+			MX6QDL_PAD_SD3_DAT6__SD3_DATA6             0x17089
+			MX6QDL_PAD_SD3_DAT7__SD3_DATA7             0x17089
+			MX6QDL_PAD_SD3_RST__SD3_RESET              0x11059
+			
+		>;
+	};
+	
+		pinctrl_usdhc3_200mhz: usdhc3grp_200mhz {
+		fsl,pins = <		
+			MX6QDL_PAD_SD3_CMD__SD3_CMD                0x170c9
+			MX6QDL_PAD_SD3_CLK__SD3_CLK                0x100c9
+			MX6QDL_PAD_SD3_DAT0__SD3_DATA0             0x170c9
+			MX6QDL_PAD_SD3_DAT1__SD3_DATA1             0x170c9
+			MX6QDL_PAD_SD3_DAT2__SD3_DATA2             0x170c9
+			MX6QDL_PAD_SD3_DAT3__SD3_DATA3             0x170c9
+			MX6QDL_PAD_SD3_DAT4__SD3_DATA4             0x170c9
+			MX6QDL_PAD_SD3_DAT5__SD3_DATA5             0x170c9
+			MX6QDL_PAD_SD3_DAT6__SD3_DATA6             0x170c9
+			MX6QDL_PAD_SD3_DAT7__SD3_DATA7             0x170c9
+			MX6QDL_PAD_SD3_RST__SD3_RESET              0x11059
+			
+		>;
+	};
+	
+
+	pinctrl_wdog: wdoggrp {
+		fsl,pins = <
+			MX6QDL_PAD_GPIO_9__WDOG1_B		0x1b8b0
+		>;
+	};
+
+	pinctrl_audmux: audmux {
+		fsl,pins = <
+			MX6QDL_PAD_KEY_COL0__AUD5_TXC			0x130b0
+			MX6QDL_PAD_KEY_COL1__AUD5_TXFS			0x130b0
+			MX6QDL_PAD_KEY_ROW1__AUD5_RXD			0x130b0
+			MX6QDL_PAD_KEY_ROW0__AUD5_TXD			0x130b0
+		>;
+	};
+
+	pinctrl_can1: can1grp {
+		fsl,pins = <
+			MX6QDL_PAD_GPIO_7__FLEXCAN1_TX			0x80000000
+			MX6QDL_PAD_GPIO_8__FLEXCAN1_RX			0x80000000
+		>;
+	};
+	
+};
diff --git a/arch/arm/mach-imx/mx6/Kconfig b/arch/arm/mach-imx/mx6/Kconfig
index 15ee2b933f..8cfe154012 100644
--- a/arch/arm/mach-imx/mx6/Kconfig
+++ b/arch/arm/mach-imx/mx6/Kconfig
@@ -365,6 +365,10 @@ config TARGET_MX6S_SIELAFF
 	select SUPPORT_SPL
 	imply CMD_DM
 
+config TARGET_TOUCHSCREEN
+	bool "touchscreen"
+    select SUPPORT_SPL
+
 config TARGET_MX6SABREAUTO
 	bool "mx6sabreauto"
 	depends on MX6QDL
@@ -718,6 +722,7 @@ source "board/liebherr/display5/Kconfig"
 source "board/liebherr/mccmon6/Kconfig"
 source "board/logicpd/imx6/Kconfig"
 source "board/sielaff/imx6dl-sielaff/Kconfig"
+source "board/smartoptics/touchscreen/Kconfig"
 source "board/solidrun/mx6cuboxi/Kconfig"
 source "board/somlabs/visionsom-6ull/Kconfig"
 source "board/technexion/pico-imx6/Kconfig"
diff --git a/board/smartoptics/touchscreen/Kconfig b/board/smartoptics/touchscreen/Kconfig
new file mode 100644
index 0000000000..ac84a12241
--- /dev/null
+++ b/board/smartoptics/touchscreen/Kconfig
@@ -0,0 +1,16 @@
+if TARGET_TOUCHSCREEN
+
+config SYS_BOARD
+	default "touchscreen"
+
+config SYS_VENDOR
+	default "smartoptics"
+
+config SYS_CONFIG_NAME
+	default "touchscreen"
+
+config IMX_CONFIG
+	default "board/smartoptics/touchscreen/imximage.cfg"
+
+
+endif
diff --git a/board/smartoptics/touchscreen/Makefile b/board/smartoptics/touchscreen/Makefile
new file mode 100644
index 0000000000..bbbb21aa47
--- /dev/null
+++ b/board/smartoptics/touchscreen/Makefile
@@ -0,0 +1,8 @@
+ifdef CONFIG_SPL_BUILD
+obj-y := touchscreen_spl.o
+else
+obj-y := touchscreen.o
+endif
+
+
+
diff --git a/board/smartoptics/touchscreen/imximage.cfg b/board/smartoptics/touchscreen/imximage.cfg
new file mode 100644
index 0000000000..5bec032fb6
--- /dev/null
+++ b/board/smartoptics/touchscreen/imximage.cfg
@@ -0,0 +1,187 @@
+/*
+ * exceet MX6DEXCEET board
+ *
+ * Derived from ./board/freescale/mx6qsabrelite/imximage.cfg
+ * Copyright (C) 2011 Freescale Semiconductor, Inc.
+ * Jason Liu <r64343@freescale.com>
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ 
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * Refer docs/README.imxmage for more details about how-to configure
+ * and create imximage boot image
+ *
+ * The syntax is taken as close as possible with the kwbimage
+ */
+
+/* image version */
+
+IMAGE_VERSION 2
+
+/*
+ * Boot Device : one of
+ * spi, sd (the board has no nand neither onenand)
+ */
+
+BOOT_FROM      spi
+
+/*
+ * Device Configuration Data (DCD)
+ *
+ * Each entry must have the format:
+ * Addr-type           Address        Value
+ *
+ * where:
+ *      Addr-type register length (1,2 or 4 bytes)
+ *      Address   absolute address of the register
+ *      value     value to be stored in the register
+ */
+ /* DDR IO TYPE */
+DATA 4 0x020e0798 0x000C0000  // IOMUXC_SW_PAD_CTL_GRP_DDR_TYPE
+DATA 4 0x020e0758 0x00000000	 
+
+/* Clock */
+DATA 4 0x020e0588 0x00000028
+DATA 4 0x020e0594 0x00000028
+			
+/* ADDRESS */		
+DATA 4 0x020e056c 0x00000028	
+DATA 4 0x020e0578 0x00000028	
+DATA 4 0x020e074c 0x00000028	
+
+/* Control */
+DATA 4 0x020e057c 0x00000028	
+DATA 4 0x020e058c 0x00000028	
+DATA 4 0x020e059c 0x00000028	
+DATA 4 0x020e05a0 0x00000028	
+DATA 4 0x020e078c 0x00000028	 
+					
+/* Data Strobes */
+DATA 4 0x020e0750 0x00020000	
+DATA 4 0x020e05a8 0x00000028	 
+DATA 4 0x020e05b0 0x00000028	
+DATA 4 0x020e0524 0x00000028	 
+DATA 4 0x020e051c 0x00000028	
+
+/* Data */
+DATA 4 0x020e0774 0x00020000	
+DATA 4 0x020e0784 0x00000028	 
+DATA 4 0x020e0788 0x00000028	 
+DATA 4 0x020e0794 0x00000028	 
+DATA 4 0x020e079c 0x00000028	
+	
+DATA 4 0x020e05ac 0x00000028	
+DATA 4 0x020e05b4 0x00000028	
+DATA 4 0x020e0528 0x00000028	
+DATA 4 0x020e0520 0x00000028	
+
+/* MMDC0_MDSCR, set the Configuration request bit during MMDC set up */
+DATA 4 0x021b001c 0x00008000	
+
+/* ============================================================================= */
+/* Calibration setup */
+/* ============================================================================= */
+
+/* DDR_PHY_P0_MPZQHWCTRL, enable both one-time & periodic HW ZQ calibration */
+DATA 4 0x021b0800 0xA1390003	
+
+/* For target board, may need to run write leveling calibration to fine tune these settings */
+DATA 4 0x021b080c 0x0036002C			
+DATA 4 0x021b0810 0x00360037		
+			
+/* Read DQS Gating calibration */
+DATA 4 0x021b083c 0x03440354	
+DATA 4 0x021b0840 0x03440334	
+
+/* Read calibration */			
+DATA 4 0x021b0848 0x4A3E4642
+/* Write calibration */
+DATA 4 0x021b0850 0x3A3C403E	
+			
+			
+/* read data bit delay: (3 is the reccommended default value, although out of reset value is 0) */			
+DATA 4 0x021b081c 0x33333333	
+DATA 4 0x021b0820 0x33333333	
+DATA 4 0x021b0824 0x33333333	
+DATA 4 0x021b0828 0x33333333	
+			
+               			
+/* Complete calibration by forced measurement */			
+DATA 4 0x021b08b8 0x00000800
+/* ============================================================================= */
+/* Calibration setup end */
+/* ============================================================================= */
+
+/* MMDC init: */	
+DATA 4 0x021b0004 0x00020036	
+DATA 4 0x021b0008 0x09444040	
+DATA 4 0x021b000c 0xB8BE7955	
+DATA 4 0x021b0010 0xFF328F64	
+DATA 4 0x021b0014 0x01FF00DB	
+					
+/* MDMISC: */
+DATA 4 0x021b0018 0x00011740	
+DATA 4 0x021b001c 0x00008000	
+DATA 4 0x021b002c 0x000026D2	
+DATA 4 0x021b0030 0x00BE1023	
+DATA 4 0x021b0040 0x00000027	 
+DATA 4 0x021b0000 0xC5190000	
+			
+/* Mode register writes */	
+/* CS0 */		
+DATA 4 0x021b001c 0x04088032	
+DATA 4 0x021b001c 0x00008033	
+DATA 4 0x021b001c 0x00048031	
+DATA 4 0x021b001c 0x19408030	
+DATA 4 0x021b001c 0x04008040
+
+/* CS1 */	
+DATA 4 0x021b001c 0x0408803A	
+DATA 4 0x021b001c 0x0000803B	
+DATA 4 0x021b001c 0x00048039	
+DATA 4 0x021b001c 0x19408038	
+DATA 4 0x021b001c 0x04008048
+		
+/* MMDC0_MDREF */			
+DATA 4 0x021b0020 0x00007800	
+			
+/* DDR_PHY_P0_MPODTCTRL */			
+DATA 4 0x021b0818 0x00011117	
+
+/* MMDC0_MDPDC now SDCTL power down enabled */			
+DATA 4 0x021b0004 0x00025576	
+			
+/* MMDC0_MAPSR ADOPT power down enabled, MMDC will enter automatically to self-refresh while the number of idle cycle reached */			
+DATA 4 0x021b0404 0x00011006	
+			
+/* MMDC0_MDSCR, clear this register (especially the configuration bit as initialization is complete) */			
+DATA 4 0x021b001c 0x00000000	
+			
+/* ============================================================================= */
+
+/* set the default clock gate to save power */
+DATA 4 0x020c4068 0x00C03F3F
+DATA 4 0x020c406c 0x0030FC03
+DATA 4 0x020c4070 0x0FFFC000
+DATA 4 0x020c4074 0x3FF00000
+DATA 4 0x020c4078 0xFFFFF300
+DATA 4 0x020c407c 0x0F0000C3
+DATA 4 0x020c4080 0x000003FF
+
+/* enable AXI cache for VDOA/VPU/IPU */
+DATA 4 0x020e0010 0xF00000CF
+/* set IPU AXI-id0 Qos=0xf(bypass) AXI-id1 Qos=0x7 */
+DATA 4 0x020e0018 0x007F007F
+DATA 4 0x020e001c 0x007F007F
+
diff --git a/board/smartoptics/touchscreen/touchscreen.c b/board/smartoptics/touchscreen/touchscreen.c
new file mode 100644
index 0000000000..909b53c6d9
--- /dev/null
+++ b/board/smartoptics/touchscreen/touchscreen.c
@@ -0,0 +1,86 @@
+#include <compiler.h>
+#include <asm/mach-imx/mxc_i2c.h>
+#include <asm/arch/sys_proto.h>
+#include <asm/arch/clock.h>
+#include <asm/arch/crm_regs.h>
+#include <asm/arch/mx6-pins.h>
+#include <asm/mach-imx/spi.h>
+#include <asm/io.h>
+#include <init.h>
+#include <netdev.h>
+#include <miiphy.h>
+#include <usb.h>
+#include <usb/ehci-ci.h>
+
+
+
+DECLARE_GLOBAL_DATA_PTR;
+
+// ## UART
+#define UART_PAD_CTRL  (PAD_CTL_PUS_100K_UP |           \
+    PAD_CTL_SPEED_MED | PAD_CTL_DSE_40ohm |             \
+    PAD_CTL_SRE_FAST  | PAD_CTL_HYS)
+
+
+static iomux_v3_cfg_t const uart2_pads[] = {
+    MX6_PAD_SD4_DAT7__UART2_TX_DATA | MUX_PAD_CTRL(UART_PAD_CTRL),
+    MX6_PAD_SD4_DAT4__UART2_RX_DATA | MUX_PAD_CTRL(UART_PAD_CTRL),
+};
+
+static void setup_iomux_uart(void)
+{
+    imx_iomux_v3_setup_multiple_pads(uart2_pads, ARRAY_SIZE(uart2_pads));
+};
+
+
+int dram_init(void)
+{
+    puts("Init dram start\n");
+    gd->ram_size = get_ram_size((void *)PHYS_SDRAM, PHYS_SDRAM_SIZE);
+    puts("Init dram stop\n");
+    return 0;
+}
+
+int board_early_init_f(void)
+{
+    setup_iomux_uart();
+    puts("Enable uart done\n");
+
+    return 0;
+}
+
+int board_phy_config(struct phy_device *phydev)
+{
+    printf ("board_phy_config\n");
+    if (phydev->drv->config)
+        phydev->drv->config(phydev);
+
+    if (phydev->phy_id == 0x221560 || phydev->phy_id == 0x221561 || phydev->phy_id == 0x00221556) {
+        /* KS8051/KS8081 */
+        printf ("Found Micrel KS8051/KS8081 PHY\n");
+        // tell the PHY that a 50MHz clock is used
+        phy_write(phydev, MDIO_DEVAD_NONE, 0x1F, 0x8180);
+    }
+
+    return 0;
+}
+
+static void setup_fec()
+{
+    struct iomuxc *const iomuxc_regs = (struct iomuxc *)IOMUXC_BASE_ADDR;
+
+    enable_fec_anatop_clock(0, ENET_50MHZ);
+    setbits_le32(&iomuxc_regs->gpr[1], IOMUXC_GPR1_ENET_CLK_SEL_MASK);
+}
+
+
+int board_init(void)
+{
+    puts("Board init\n");
+    gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
+    puts("Board init done\n");
+    setup_fec();
+    enable_spi_clk(true, 1);
+    
+    return 0;
+}
diff --git a/build.sh b/build.sh
new file mode 100755
index 0000000000..945638fa35
--- /dev/null
+++ b/build.sh
@@ -0,0 +1,8 @@
+#!/bin/sh
+#make clea
+make CROSSCOMPILE=arm-smartoptics-linux-gnueabi- touchscreen_defconfig
+make CROSSCOMPILE=arm-smartoptics-linux-gnueabi-
+
+cp u-boot-dtb.imx /mnt/c/dump/uboot/
+cp u-boot.imx /mnt/c/dump/uboot/
+cp extlinux.conf /mnt/c/dump/uboot/
diff --git a/configs/touchscreen_defconfig b/configs/touchscreen_defconfig
new file mode 100644
index 0000000000..e6d3f38c76
--- /dev/null
+++ b/configs/touchscreen_defconfig
@@ -0,0 +1,133 @@
+# See imx6q-marsboard.dts
+#https://www.linux4sam.org/bin/view/Linux4SAM/DriverModelInUBoot
+# https://github.com/u-boot/u-boot/blob/master/doc/develop/driver-model/usb-info.rst
+# KSZ8081 micrel
+# Distro booting
+# Example: https://groups.google.com/g/krtkl-snickerdoodle/c/QpynmENz3ws
+# Doc: https://github.com/ARM-software/u-boot/blob/master/doc/README.distro
+
+#make ARCH=arm <your-platform>_defconfig
+#make ARCH=arm menuconfig
+
+#- navigate to "Kernel hacking"
+#- activate  "Kernel low-level debugging functions" as built-in (shown as '*')
+#- activate  "Early printk (NEW)" as built-in
+
+
+CONFIG_ARM=y
+CONFIG_ARCH_MX6=y
+CONFIG_TEXT_BASE=0x17800000
+CONFIG_SYS_MALLOC_LEN=0x1000000
+#/CONFIG_SYS_LOAD_ADDR=0x12000000
+CONFIG_MX6Q=y
+CONFIG_NR_DRAM_BANKS=1
+CONFIG_TARGET_TOUCHSCREEN=y
+CONFIG_BOARD_EARLY_INIT_F=y
+CONFIG_LEGACY_IMAGE_FORMAT=y
+CONFIG_SUPPORT_RAW_INITRD=y
+CONFIG_MXC_UART=y
+
+# Define tree/ driver model
+CONFIG_OF_CONTROL=y
+CONFIG_OF_SEPARATE=y
+CONFIG_DEFAULT_DEVICE_TREE="imx6dl-so"
+
+# iomux
+CONFIG_PINCTRL=y
+CONFIG_PINCTRL_IMX6=y
+
+
+# Ethernet
+CONFIG_MII=y
+CONFIG_FEC_MXC=y
+CONFIG_PHYLIB=y
+CONFIG_PHY_MICREL=y
+CONFIG_PHY_MICREL_KSZ8XXX=y
+
+# Voltage regulator
+CONFIG_DM_GPIO=y
+CONFIG_DM_REGULATOR=y
+CONFIG_DM_REGULATOR_FIXED=y
+CONFIG_DM_REGULATOR_GPIO=y
+
+# Spi
+
+CONFIG_SPI=y
+CONFIG_DM_SPI=y
+CONFIG_SPI_BOOT=y
+CONFIG_DM_SPI_FLASH=y
+CONFIG_SF_DEFAULT_BUS=1
+CONFIG_SF_DEFAULT_SPEED=25000000
+CONFIG_SF_DEFAULT_MODE=0
+CONFIG_SF_DEFAULT_CS=0
+CONFIG_MXC_SPI=y
+CONFIG_SPI_FLASH=y
+CONFIG_SPI_FLASH_EON=y
+CONFIG_SPI_FLASH_MTD=y
+CONFIG_MTD=y
+
+# Serial
+CONFIG_DM_SERIAL=y
+
+#MMC
+CONFIG_FSL_USDHC=y
+CONFIG_MMC_SPEED_MODE_SET=y
+CONFIG_MMC_BROKEN_CD=y
+CONFIG_SUPPORT_EMMC_BOOT=y
+
+# USB
+CONFIG_DM_USB=y
+CONFIG_USB=y
+CONFIG_USB_EHCI_MX6=y
+CONFIG_USB_STORAGE=y
+CONFIG_BLK=y
+CONFIG_EHCI_HCD_INIT_AFTER_RESET=y
+CONFIG_USB_EHCI_GENERIC=y
+CONFIG_USB_FUNCTION_MASS_STORAGE=y
+CONFIG_USB_GADGET=y
+CONFIG_USB_GADGET_VBUS_DRAW=2
+CONFIG_USB_GADGET_VENDOR_NUM=0x0525
+CONFIG_USB_GADGET_PRODUCT_NUM=0xa4a5
+CONFIG_USB_GADGET_MANUFACTURER="FSL"
+CONFIG_USB_GADGET_DOWNLOAD=y
+
+
+# Logging
+#/CONFIG_LOG=y
+#/CONFIG_HEXDUMP=y
+#/CONFIG_CMD_LOG=y
+#/CONFIG_LOG_MAX_LEVEL=9
+#/CONFIG_LOG_DEFAULT_LEVEL=9
+#/CONFIG_LOGLEVEL=9
+#/CONFIG_LOG_CONSOL=y
+#/CONFIG_EVENT_DEBUG=y
+#/CONFIG_LOG_ERROR_RETURN=y
+
+# Libs
+
+CONFIG_FS_EXT4=y
+
+# Command
+CONFIG_HUSH_PARSER=y
+CONFIG_CMD_BOOTZ=y
+CONFIG_CMD_DM=y
+CONFIG_CMD_DHCP=y
+CONFIG_CMD_SYSBOOT=y
+CONFIG_CMD_PING=y
+CONFIG_CMD_USB=y
+CONFIG_CMD_EXT2=y
+CONFIG_CMD_EXT4=y
+CONFIG_CMD_PART=y
+CONFIG_CMD_MMC=y
+CONFIG_CMD_MII=y
+CONFIG_CMD_SPI=y
+CONFIG_CMD_SF=y
+CONFIG_CMD_SF_TEST=y
+CONFIG_CMD_FAT=y
+CONFIG_CMD_FS_GENERIC=y
+CONFIG_CMD_MTDPARTS=y
+
+
+# CONFIG_GENERATE_SMBIOS_TABLE is not set
+
+#/CONFIG_DISTRO_DEFAULTS=y
diff --git a/cptftp.sh b/cptftp.sh
new file mode 100755
index 0000000000..92026e4c2b
--- /dev/null
+++ b/cptftp.sh
@@ -0,0 +1,27 @@
+#!/bin/sh
+
+echo "Copy to c"
+
+echo "Copy to pi"
+
+#scp /home/icepic/build_image/yocto/yocto-smartoptics/tmp/deploy/images/imx6/smartoptics-image-imx6.ext3.gz.u-boot root@192.168.20.45:/srv/tftp/uramdisk
+# scp /home/icepic/build_image/yocto/yocto-smartoptics/tmp/deploy/images/imx6/smartoptics-flash-image-imx6.ext3.gz.u-boot root@192.168.20.45:/srv/tftp/uramdisk
+
+dd if=/dev/zero of=dump bs=1024 count=1
+cat dump u-boot.imx > u-boot-re.imx
+
+
+cp u-boot.imx /mnt/c/dump/u-boot.imx
+cp u-boot-re.imx /mnt/c/dump/u-boot-re.imx
+
+scp u-boot.imx root@192.168.20.45:/srv/tftp/
+scp u-boot-re.imx root@192.168.20.45:/srv/tftp/
+
+# scp /mnt/c/tftp/zimage-orig root@192.168.20.45:/srv/tftp/zimage
+# scp /mnt/c/tftp/uramdisk root@192.168.20.45:/srv/tftp/uramdisk
+
+
+
+
+
+
diff --git a/extlinux.conf b/extlinux.conf
new file mode 100644
index 0000000000..26375c4a70
--- /dev/null
+++ b/extlinux.conf
@@ -0,0 +1,29 @@
+ui menu.c32
+
+menu autoboot Welcome to Fedora. Automatic boot in # second{,s}. Press a key for options.
+menu title Fedora Boot Options.
+menu hidden
+
+timeout 50
+#totaltimeout 9000
+
+default Fedora (3.17.0-0.rc4.git2.1.fc22.armv7hl+lpae) 22 (Rawhide)
+
+label Fedora (3.17.0-0.rc4.git2.1.fc22.armv7hl) 22 (Rawhide)
+	kernel /boot/vmlinuz-3.17.0-0.rc4.git2.1.fc22.armv7hl
+	append ro root=UUID=8eac677f-8ea8-4270-8479-d5ddbb797450 console=ttyS0,115200n8 LANG=en_US.UTF-8 drm.debug=0xf
+	fdtdir /boot/dtb-3.17.0-0.rc4.git2.1.fc22.armv7hl
+	initrd /boot/initramfs-3.17.0-0.rc4.git2.1.fc22.armv7hl.img
+
+label Fedora (3.17.0-0.rc4.git2.1.fc22.armv7hl+lpae) 22 (Rawhide)
+	kernel /boot/vmlinuz-3.17.0-0.rc4.git2.1.fc22.armv7hl+lpae
+	append ro root=UUID=8eac677f-8ea8-4270-8479-d5ddbb797450 console=ttyS0,115200n8 LANG=en_US.UTF-8 drm.debug=0xf
+	fdtdir /boot/dtb-3.17.0-0.rc4.git2.1.fc22.armv7hl+lpae
+	initrd /boot/initramfs-3.17.0-0.rc4.git2.1.fc22.armv7hl+lpae.img
+
+label Fedora-0-rescue-8f6ba7b039524e0eb957d2c9203f04bc (0-rescue-8f6ba7b039524e0eb957d2c9203f04bc)
+	kernel /boot/vmlinuz-0-rescue-8f6ba7b039524e0eb957d2c9203f04bc
+	initrd /boot/initramfs-0-rescue-8f6ba7b039524e0eb957d2c9203f04bc.img
+	append ro root=UUID=8eac677f-8ea8-4270-8479-d5ddbb797450 console=ttyS0,115200n8
+	fdtdir /boot/dtb-3.16.0-0.rc6.git1.1.fc22.armv7hl+lpae
+    
\ No newline at end of file
diff --git a/include/configs/mx6exceet_common.h b/include/configs/mx6exceet_common.h
new file mode 100644
index 0000000000..e50ca5b6c9
--- /dev/null
+++ b/include/configs/mx6exceet_common.h
@@ -0,0 +1,399 @@
+/*
+ * Copyright (C) 2016 exceet electronics GmbH
+ * Copyright (C) 2012 Freescale Semiconductor, Inc.
+ *
+ * Configuration settings for the Freescale i.MX6Q SabreSD board.
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#ifndef __MX6EXCEET_COMMON_CONFIG_H
+#define __MX6EXCEET_COMMON_CONFIG_H
+
+#include "mx6_common.h"
+
+#define CONFIG_IMX_THERMAL
+
+/* Size of malloc() pool */
+#define CONFIG_SYS_MALLOC_LEN		(10 * SZ_1M)
+
+#define CONFIG_BOARD_EARLY_INIT_F
+#define CONFIG_BOARD_LATE_INIT
+
+#define CONFIG_MXC_UART
+
+/* MMC Configs */
+#define CONFIG_SYS_FSL_ESDHC_ADDR      0
+
+#define CONFIG_CMD_PING
+#define CONFIG_CMD_DHCP
+#define CONFIG_CMD_MII
+#define CONFIG_FEC_MXC
+#define CONFIG_MII
+#define IMX_FEC_BASE			ENET_BASE_ADDR
+#define CONFIG_FEC_XCV_TYPE		RMII
+#define CONFIG_ETHPRIME			"FEC"
+#define CONFIG_FEC_MXC_PHYADDR		1
+
+#define CONFIG_PHYLIB
+#define CONFIG_PHY_MICREL
+
+#ifdef CONFIG_SPI_FLASH
+#define CONFIG_CMD_SF
+#define CONFIG_MXC_SPI
+#define CONFIG_SPI_FLASH_EON
+#define CONFIG_SF_DEFAULT_BUS		1
+#define CONFIG_SF_DEFAULT_CS		0
+#define CONFIG_SF_DEFAULT_SPEED		25000000
+#define CONFIG_SF_DEFAULT_MODE		SPI_MODE_0
+#endif
+
+#define CONFIG_HOSTNAME		mx6exceet
+#define CONFIG_UBI_PART		ubi
+#define CONFIG_UBIFS_VOLUME	rootfs0
+
+#define MTDIDS_DEFAULT		"nand0=nand0"
+/* #define MTDPARTS_DEFAULT	"mtdparts=gpmi-nand:-(ubi)" */
+#define MTDPARTS_DEFAULT	"mtdparts=nand0:-@0x0(nandflash)"
+
+/* Command definition */
+#define CONFIG_CMD_BMODE
+
+#ifdef CONFIG_SUPPORT_EMMC_BOOT
+#define EMMC_ENV \
+	"emmcdev=1\0" \
+	"update_emmc_firmware=" \
+		"if test ${ip_dyn} = yes; then " \
+			"setenv get_cmd dhcp; " \
+		"else " \
+			"setenv get_cmd tftp; " \
+		"fi; " \
+		"if ${get_cmd} ${update_sd_firmware_filename}; then " \
+			"if mmc dev ${emmcdev} 1; then "	\
+				"setexpr fw_sz ${filesize} / 0x200; " \
+				"setexpr fw_sz ${fw_sz} + 1; "	\
+				"mmc write ${loadaddr} 0x2 ${fw_sz}; " \
+			"fi; "	\
+		"fi\0"
+#else
+#define EMMC_ENV ""
+#endif
+
+#define CONFIG_ENV_VARS_UBOOT_RUNTIME_CONFIG
+
+#ifndef VIDEO_ARGS
+#define VIDEO_ARGS ""
+#endif
+
+#ifndef VIDEO_ARGS_SCRIPT
+#define VIDEO_ARGS_SCRIPT ""
+#endif
+
+#define CONFIG_EXTRA_ENV_SETTINGS \
+	"script=boot.scr\0" \
+	"image=zImage\0" \
+	"fdt_file=undefined\0" \
+	"fdt_addr=0x18000000\0" \
+	"boot_devices=mmc net ubi\0" \
+	"boot_fdt=try\0" \
+	"ip_dyn=no\0" \
+	"console=" CONFIG_CONSOLE_DEV "\0" \
+	"dfuspi=dfu 0 sf 0:0:10000000:0\0" \
+	"dfu_alt_info_spl=spl raw 0x400\0" \
+	"dfu_alt_info_img=u-boot raw 0x10000\0" \
+	"dfu_alt_info=spl raw 0x400\0" \
+	"ethaddr=70:82:0E:99:90:04\0" \
+	"fdt_high=0xffffffff\0"	  \
+	"initrd_high=0xffffffff\0" \
+	"mtdids=" MTDIDS_DEFAULT "\0" \
+	"mtdparts=" MTDPARTS_DEFAULT "\0" \
+	"mmcdev=" __stringify(MMC_BOOT_DEV) "\0" \
+	"mmcpart=1\0" \
+	"mmcroot=" CONFIG_MMCROOT " rootwait rw\0" \
+	"usbdev=0\0" \
+	"usbpart=1\0" \
+	"usbroot=/dev/sda2 rootwait rw\0" \
+	"usbargs=setenv bootargs console=${console},${baudrate} root=${usbroot} ${video_args}\0" \
+	"usb_loadfdt=fatload usb ${usbdev}:${usbpart} ${fdt_addr} ${fdt_file}\0" \
+	"usb_loadimage=fatload usb ${usbdev}:${usbpart} ${loadaddr} ${image}\0" \
+	"usbboot=echo Booting from usb ...; run video_args_script; run usbargs; usb start; run usb_loadfdt; run usb_loadimage; bootz ${loadaddr} - ${fdt_addr}\0" \
+	"emmcdev=1\0" \
+	"emmcpart=1\0" \
+	"emmcroot=/dev/mmcblk0p1 rootwait rw\0" \
+	"emmcargs=setenv bootargs console=${console},${baudrate} root=${emmcroot} ${video_args}\0" \
+	"emmc_loadfdt=ext4load mmc ${emmcdev}:${emmcpart} ${fdt_addr} /boot/${fdt_file}\0" \
+	"emmc_loadimage=ext4load mmc ${emmcdev}:${emmcpart} ${loadaddr} /boot/${image}\0" \
+	"emmcboot=echo Booting from emmc ...; run video_args_script; run emmcargs; run emmc_loadfdt; run emmc_loadimage; bootz ${loadaddr} - ${fdt_addr}\0" \
+	"nfsroot=/nfsroot\0" \
+	"serverip=192.168.1.10\0" \
+	"ipaddr=192.168.1.11\0" \
+	"gatewayip=192.168.1.10\0" \
+	"netmask=255.255.255.0\0" \
+	"update_sd_firmware=" \
+		"if test ${ip_dyn} = yes; then " \
+			"setenv get_cmd dhcp; " \
+		"else " \
+			"setenv get_cmd tftp; " \
+		"fi; " \
+		"if mmc dev ${mmcdev}; then "	\
+			"if ${get_cmd} ${update_sd_firmware_filename}; then " \
+				"setexpr fw_sz ${filesize} / 0x200; " \
+				"setexpr fw_sz ${fw_sz} + 1; "	\
+				"mmc write ${loadaddr} 0x2 ${fw_sz}; " \
+			"fi; "	\
+		"fi\0" \
+	EMMC_ENV	  \
+	"video_args_hdmi=setenv video_args $video_args " \
+		"video=mxcfb${fb}:dev=hdmi,1920x1080M@60,if=RGB24\0" \
+	"video_args_lvds=setenv video_args $video_args " \
+		"video=mxcfb${fb}:dev=ldb,LDB-XGA,if=RGB666\0" \
+	"video_args_lcd=setenv video_args $video_args " \
+		"video=mxcfb${fb}:dev=lcd,800x480M@60,if=RGB666\0" \
+	"fb=0\0" \
+	"video_interfaces=hdmi lvds lcd\0" \
+	"video_args_script=" \
+		"setexpr fb 0; " \
+		"setenv videoargs; " \
+		"for v in ${video_interfaces}; do " \
+			"run video_args_${v}; " \
+			"setexpr fb $fb + 1; " \
+		"done\0" \
+	"ubiargs=setenv bootargs console=${console},${baudrate} " \
+		"rootfstype=ubifs ubi.mtd=0 root=ubi0_0 rw " \
+		VIDEO_ARGS "\0" \
+	"ubiboot=echo Booting from ubi/flash ...; " \
+		VIDEO_ARGS_SCRIPT \
+		"run ubiargs; " \
+		"ubi part nandflash; " \
+		"ubifsmount ubi0:rootfs; " \
+		"run ubiloadimage; " \
+		"if test ${boot_fdt} = yes || test ${boot_fdt} = try; then " \
+			"if run ubiloadfdt; then " \
+				"bootz ${loadaddr} - ${fdt_addr}; " \
+			"else " \
+				"if test ${boot_fdt} = try; then " \
+					"bootz; " \
+				"else " \
+					"echo WARN: Cannot load the DT; " \
+				"fi; " \
+			"fi; " \
+		"else " \
+			"bootz; " \
+		"fi;\0" \
+	"ubiloadimage=ubifsload ${loadaddr} /boot/${image}\0" \
+	"ubiloadfdt=ubifsload ${fdt_addr} /boot/${fdt_file}\0" \
+	"mmcargs=setenv bootargs console=${console},${baudrate} " \
+		"root=${mmcroot} " \
+		VIDEO_ARGS "\0" \
+	"loadbootscript=" \
+		"fatload mmc ${mmcdev}:${mmcpart} ${loadaddr} ${script};\0" \
+	"bootscript=echo Running bootscript from mmc ...; " \
+		"source\0" \
+	"mmcloadimage=fatload mmc ${mmcdev}:${mmcpart} ${loadaddr} ${image}\0" \
+	"mmcloadfdt=fatload mmc ${mmcdev}:${mmcpart} ${fdt_addr} ${fdt_file}\0" \
+	"mmcboot=echo Booting from mmc ...; " \
+		VIDEO_ARGS_SCRIPT \
+		"run mmcargs; " \
+		"run mmcloadimage; " \
+		"if test ${boot_fdt} = yes || test ${boot_fdt} = try; then " \
+			"if run mmcloadfdt; then " \
+				"bootz ${loadaddr} - ${fdt_addr}; " \
+			"else " \
+				"if test ${boot_fdt} = try; then " \
+					"bootz; " \
+				"else " \
+					"echo WARN: Cannot load the DT; " \
+				"fi; " \
+			"fi; " \
+		"else " \
+			"bootz; " \
+		"fi;\0" \
+	"netargs=setenv bootargs console=${console},${baudrate} " \
+		"root=/dev/nfs rw " \
+		"ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}:eth0:any: " \
+		"nfsroot=${serverip}:${nfsroot},v3,tcp " \
+		VIDEO_ARGS "\0" \
+	"netboot=echo Booting from net ...; " \
+		VIDEO_ARGS_SCRIPT \
+		"run netargs; " \
+		"if test ${ip_dyn} = yes; then " \
+			"setenv get_cmd dhcp; " \
+		"else " \
+			"setenv get_cmd tftp; " \
+		"fi; " \
+		"${get_cmd} ${image}; " \
+		"if test ${boot_fdt} = yes || test ${boot_fdt} = try; then " \
+			"if ${get_cmd} ${fdt_addr} ${image}-${fdt_file}; then " \
+				"bootz ${loadaddr} - ${fdt_addr}; " \
+			"else " \
+				"if test ${boot_fdt} = try; then " \
+					"bootz; " \
+				"else " \
+					"echo WARN: Cannot load the DT; " \
+				"fi; " \
+			"fi; " \
+		"else " \
+			"bootz; " \
+		"fi;\0" \
+		"findfdt="\
+			"if test $fdt_file = undefined; then " \
+				"if test $board_name = MX6EXCEET && test $board_rev = MX6QP; then " \
+					"setenv fdt_file imx6qp-exceet.dtb; fi; " \
+				"if test $board_name = MX6EXCEET && test $board_rev = MX6Q; then " \
+					"setenv fdt_file imx6q-exceet.dtb; fi; " \
+				"if test $board_name = MX6EXCEET && test $board_rev = MX6DL; then " \
+					"setenv fdt_file imx6dl-exceet.dtb; fi; " \
+				"if test $fdt_file = undefined; then " \
+					"echo WARNING: Could not determine dtb to use; fi; " \
+			"fi;\0" \
+
+
+#define CONFIG_BOOTCOMMAND \
+	"run findfdt; " \
+	"for b in ${boot_devices}; do " \
+		"if test ${b} = mmc; then " \
+			"run mmcboot; " \
+		"fi; " \
+		"if test ${b} = net; then " \
+			"run netboot; " \
+		"fi; " \
+		"if test ${b} = emmc; then " \
+			"run emmcboot; " \
+		"fi; " \
+		"if test ${b} = ubi; then " \
+			"run ubiboot; " \
+		"fi; " \
+	"done; "
+
+#define CONFIG_ARP_TIMEOUT     200UL
+
+#define CONFIG_SYS_MEMTEST_START       0x10000000
+#define CONFIG_SYS_MEMTEST_END         0x10010000
+#define CONFIG_SYS_MEMTEST_SCRATCH     0x10800000
+
+#define CONFIG_STACKSIZE               (128 * 1024)
+
+/* Physical Memory Map */
+#define CONFIG_NR_DRAM_BANKS           1
+#define PHYS_SDRAM                     MMDC0_ARB_BASE_ADDR
+
+#define CONFIG_SYS_SDRAM_BASE          PHYS_SDRAM
+#define CONFIG_SYS_INIT_RAM_ADDR       IRAM_BASE_ADDR
+#define CONFIG_SYS_INIT_RAM_SIZE       IRAM_SIZE
+/*  */
+#define CONFIG_SYS_INIT_SP_OFFSET \
+	(CONFIG_SYS_INIT_RAM_SIZE - GENERATED_GBL_DATA_SIZE)
+#define CONFIG_SYS_INIT_SP_ADDR \
+	(CONFIG_SYS_INIT_RAM_ADDR + CONFIG_SYS_INIT_SP_OFFSET)
+
+/* FLASH and environment organization */
+#define CONFIG_SYS_NO_FLASH
+
+/* Enable NAND support */
+#define CONFIG_CMD_NAND
+#define CONFIG_CMD_NAND_TRIMFFS
+#define CONFIG_CMD_TIME
+
+/* NAND stuff */
+#define CONFIG_NAND_MXS
+#define CONFIG_SYS_MAX_NAND_DEVICE	1
+#define CONFIG_SYS_NAND_BASE		0x40000000
+#define CONFIG_SYS_NAND_5_ADDR_CYCLE
+#define CONFIG_SYS_NAND_ONFI_DETECTION
+
+/* DMA stuff, needed for GPMI/MXS NAND support */
+#define CONFIG_APBH_DMA
+#define CONFIG_APBH_DMA_BURST
+#define CONFIG_APBH_DMA_BURST8
+
+/* Environment organization */
+
+/* allow to overwrite serial and ethaddr */
+#define CONFIG_ENV_OVERWRITE
+#define CONFIG_CONS_INDEX		1
+#define CONFIG_BAUDRATE			115200
+
+#if !defined(CONFIG_ENV_IS_IN_MMC)
+#define CONFIG_ENV_IS_IN_SPI_FLASH
+#endif
+
+#define CONFIG_ENV_SECT_SIZE		(64 << 10)
+#define CONFIG_ENV_SIZE         	CONFIG_ENV_SECT_SIZE
+
+#if defined(CONFIG_ENV_IS_IN_MMC)
+/* Environment in MMC */
+#define CONFIG_ENV_OFFSET			(768 << 10)
+#elif defined(CONFIG_ENV_IS_IN_SPI_FLASH)
+/* Environment in SPI FLASH */
+#define CONFIG_ENV_OFFSET		((1024 << 10) - CONFIG_ENV_SIZE)
+#define CONFIG_ENV_SPI_BUS		CONFIG_SF_DEFAULT_BUS
+#define CONFIG_ENV_SPI_CS		CONFIG_SF_DEFAULT_CS
+#define CONFIG_ENV_SPI_MODE		CONFIG_SF_DEFAULT_MODE
+#define CONFIG_ENV_SPI_MAX_HZ	CONFIG_SF_DEFAULT_SPEED
+#endif
+
+/* Framebuffer */
+#define CONFIG_VIDEO
+#define CONFIG_VIDEO_IPUV3
+#define CONFIG_CFB_CONSOLE
+#define CONFIG_VGA_AS_SINGLE_DEVICE
+#define CONFIG_SYS_CONSOLE_IS_IN_ENV
+#define CONFIG_SYS_CONSOLE_OVERWRITE_ROUTINE
+#define CONFIG_VIDEO_BMP_RLE8
+#define CONFIG_SPLASH_SCREEN
+#define CONFIG_SPLASH_SCREEN_ALIGN
+#define CONFIG_BMP_16BPP
+#define CONFIG_VIDEO_LOGO
+#define CONFIG_VIDEO_BMP_LOGO
+#define CONFIG_IPUV3_CLK 260000000
+/*
+#define CONFIG_IMX_HDMI
+*/
+#define CONFIG_IMX_VIDEO_SKIP
+
+#ifndef CONFIG_SPL
+#define CONFIG_CI_UDC
+#define CONFIG_USBD_HS
+#define CONFIG_USB_GADGET_DUALSPEED
+
+#define CONFIG_USB_GADGET
+#define CONFIG_CMD_USB_MASS_STORAGE
+#define CONFIG_USB_FUNCTION_MASS_STORAGE
+#define CONFIG_USB_GADGET_DOWNLOAD
+#define CONFIG_USB_GADGET_VBUS_DRAW	2
+
+#define CONFIG_G_DNL_VENDOR_NUM		0x0525
+#define CONFIG_G_DNL_PRODUCT_NUM	0xa4a5
+#define CONFIG_G_DNL_MANUFACTURER	"FSL"
+
+#define CONFIG_USB_FUNCTION_FASTBOOT
+#define CONFIG_CMD_FASTBOOT
+#define CONFIG_ANDROID_BOOT_IMAGE
+#define CONFIG_FASTBOOT_BUF_ADDR   CONFIG_SYS_LOAD_ADDR
+#define CONFIG_FASTBOOT_BUF_SIZE   0x07000000
+
+/* USB Device Firmware Update support */
+#define CONFIG_CMD_DFU
+#define CONFIG_USB_FUNCTION_DFU
+#define CONFIG_DFU_MMC
+#define CONFIG_DFU_SF
+#endif
+
+/* UBI/UBIFS config options */
+#define CONFIG_LZO
+#define CONFIG_MTD_DEVICE
+#define CONFIG_MTD_PARTITIONS
+#define CONFIG_RBTREE
+#define CONFIG_CMD_MTDPARTS
+#define CONFIG_CMD_UBI
+#define CONFIG_CMD_UBIFS
+#define CONFIG_UBI_SILENCE_MSG
+
+#define CONFIG_OF_LIBFDT
+#define CONFIG_CMD_BOOTZ
+
+#ifndef CONFIG_SYS_DCACHE_OFF
+#define CONFIG_CMD_CACHE
+#endif
+
+#endif                         /* __MX6EXCEET_COMMON_CONFIG_H */
diff --git a/include/configs/touchscreen.h b/include/configs/touchscreen.h
new file mode 100644
index 0000000000..bc7c47c350
--- /dev/null
+++ b/include/configs/touchscreen.h
@@ -0,0 +1,66 @@
+/*
+ * Copyright (C) 2016 exceet electronics GmbH
+ * Copyright (C) 2012 Freescale Semiconductor, Inc.
+ *
+ * Configuration settings for the exceet i.MX6Q board.
+ *
+ * SPDX-License-Identifier:     GPL-2.0+
+ */
+
+#ifndef __TOUCHSCREEN_CONFIG_H
+#define __TOUCHSCREEN_CONFIG_H
+
+#define DEBUG
+
+#include <asm/arch/imx-regs.h>
+#include <linux/sizes.h>
+#include "mx6_common.h"
+
+#define BOOT_TARGET_DEVICES(func) \
+    func(MMC, mmc, 1)             \
+    func(USB, usb, 0)
+
+
+#include <config_distro_bootcmd.h>
+
+#define CFG_EXTRA_ENV_SETTINGS BOOTENV                                  \
+    "fdtfile=imx6dl-so.dtb\0"                                           \
+    "fdt_high=0xffffffff\0"                                             \
+    "initrd_high=0xffffffff\0"                                          \
+    "bootargs=vt.global_cursor_default=0 console=ttymxc1,115200 video=DPI-1:800x480@60M\0" \
+    "kernel_addr_r=0x12000000\0"                                       \
+    "fdt_addr_r=0x18000000\0"                                           \
+    "pxefile_addr_r=0x20000000\0"                                       \
+    "scriptaddr=0x20100000\0"                                           \
+    "ramdisk_addr_r=0x20200000\0"                                       \
+    "rootfs_addr_r=0x20000000\0"                                        \
+    "load_kernel_usb=fatload usb 0:1 ${kernel_addr_r} /boot/zImage\0"    \
+    "load_rootfs_usb=fatload usb 0:1 ${rootfs_addr_r} /boot/smartoptics-image-dev-imx6.cpio.gz.u-boot\0" \
+    "load_fdt_usb=fatload usb 0:1 ${fdt_addr_r} /boot/imx6dl-so-imx6.dtb\0" \
+    "load_files_usb=usb start; run load_fdt_usb; run load_kernel_usb; run load_rootfs_usb\0" \
+    "boot_usb_custom=run load_files_usb; bootz ${kernel_addr_r} ${rootfs_addr_r} ${fdt_addr_r}\0"
+
+
+
+#define CFG_MXC_UART_BASE       UART2_BASE
+
+#define PHYS_SDRAM          MMDC0_ARB_BASE_ADDR
+#define PHYS_SDRAM_SIZE             (1u * 2048 * 1024 * 1024)
+
+#define CFG_SYS_SDRAM_BASE          PHYS_SDRAM
+#define CFG_SYS_INIT_RAM_ADDR       IRAM_BASE_ADDR
+#define CFG_SYS_INIT_RAM_SIZE       IRAM_SIZE
+#define CFG_MXC_USB_FLAGS 0
+#define CFG_SYS_FSL_ESDHC_ADDR USDHC1_BASE_ADDR
+#define CFG_SYS_FSL_USDHC_NUM 2
+#define CFG_SYS_MMC_IMG_LOAD_PART 1
+
+#define CFG_SYS_UBOOT_BASE   _TEXT_BASE
+
+#define CFG_SYS_INIT_SP_OFFSET \
+    (CFG_SYS_INIT_RAM_SIZE - GENERATED_GBL_DATA_SIZE)
+#define CFG_SYS_INIT_SP_ADDR \
+    (CFG_SYS_INIT_RAM_ADDR + CFG_SYS_INIT_SP_OFFSET)
+
+
+#endif         /* __MX6QEXCEET_CONFIG_H */
diff --git a/include/configs/touchscreen.h.bk b/include/configs/touchscreen.h.bk
new file mode 100644
index 0000000000..81fd4b3376
--- /dev/null
+++ b/include/configs/touchscreen.h.bk
@@ -0,0 +1,64 @@
+/*
+ * Copyright (C) 2016 exceet electronics GmbH
+ * Copyright (C) 2012 Freescale Semiconductor, Inc.
+ *
+ * Configuration settings for the exceet i.MX6Q board.
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#ifndef __TOUCHSCREEN_CONFIG_H
+#define __TOUCHSCREEN_CONFIG_H
+
+#ifdef CONFIG_SPL
+#define CONFIG_SPL_LIBCOMMON_SUPPORT
+#define CONFIG_SPL_MMC_SUPPORT
+#include "imx6_spl.h"
+#endif
+
+#define CONFIG_MACH_TYPE	9000
+#define CONFIG_MXC_UART_BASE	UART2_BASE
+#define CONFIG_CONSOLE_DEV		"ttymxc1"
+#define CONFIG_MMCROOT			"/dev/mmcblk1p2"
+
+#define CONFIG_NR_DRAM_BANKS		1
+#define PHYS_SDRAM			MMDC0_ARB_BASE_ADDR
+#if defined(CONFIG_DDR_MB_256)
+#define PHYS_SDRAM_SIZE			(1u * 256 * 1024 * 1024)
+#elif defined(CONFIG_DDR_MB_512)
+#define PHYS_SDRAM_SIZE			(1u * 512 * 1024 * 1024)
+#elif defined(CONFIG_DDR_MB_1024)
+#define PHYS_SDRAM_SIZE			(1u * 1024 * 1024 * 1024)
+#elif defined(CONFIG_DDR_MB_2048)
+#define PHYS_SDRAM_SIZE			(1u * 2048 * 1024 * 1024)
+#endif
+
+#define CONFIG_SUPPORT_EMMC_BOOT /* eMMC specific */
+
+#define VIDEO_ARGS        "${video_args}"
+#define VIDEO_ARGS_SCRIPT "run video_args_script; "
+
+#include "mx6exceet_common.h"
+
+#define CONFIG_SYS_FSL_USDHC_NUM	2
+#define MMC_BOOT_DEV				0	/* SDHC2 */
+#if defined(CONFIG_ENV_IS_IN_MMC)
+#define CONFIG_SYS_MMC_ENV_DEV		0	/* SDHC2 */
+#endif
+
+/* USB Configs */
+#define CONFIG_CMD_USB
+#ifdef CONFIG_CMD_USB
+#define CONFIG_USB_EHCI
+#define CONFIG_USB_EHCI_MX6
+#define CONFIG_USB_STORAGE
+#define CONFIG_USB_HUB_MIN_POWER_ON_DELAY 1000
+#define CONFIG_EHCI_HCD_INIT_AFTER_RESET
+#define CONFIG_USB_HOST_ETHER
+#define CONFIG_USB_ETHER_ASIX
+#define CONFIG_MXC_USB_PORTSC		(PORT_PTS_UTMI | PORT_PTS_PTW)
+#define CONFIG_MXC_USB_FLAGS		0
+#define CONFIG_USB_MAX_CONTROLLER_COUNT	2 /* Enabled USB controller number */
+#endif
+
+#endif	       /* __MX6QEXCEET_CONFIG_H */
diff --git a/include/configs/touchscreen_common.h b/include/configs/touchscreen_common.h
new file mode 100644
index 0000000000..1e2c44522f
--- /dev/null
+++ b/include/configs/touchscreen_common.h
@@ -0,0 +1,399 @@
+/*
+ * Copyright (C) 2016 exceet electronics GmbH
+ * Copyright (C) 2012 Freescale Semiconductor, Inc.
+ *
+ * Configuration settings for the Freescale i.MX6Q SabreSD board.
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#ifndef __TOUCHSCREEN_COMMON_CONFIG_H
+#define __TOUCHSCREEN_COMMON_CONFIG_H
+
+#include "mx6_common.h"
+
+#define CONFIG_IMX_THERMAL
+
+/* Size of malloc() pool */
+#define CONFIG_SYS_MALLOC_LEN		(10 * SZ_1M)
+
+#define CONFIG_BOARD_EARLY_INIT_F
+#define CONFIG_BOARD_LATE_INIT
+
+#define CONFIG_MXC_UART
+
+/* MMC Configs */
+#define CONFIG_SYS_FSL_ESDHC_ADDR      0
+
+#define CONFIG_CMD_PING
+#define CONFIG_CMD_DHCP
+#define CONFIG_CMD_MII
+#define CONFIG_FEC_MXC
+#define CONFIG_MII
+#define IMX_FEC_BASE			ENET_BASE_ADDR
+#define CONFIG_FEC_XCV_TYPE		RMII
+#define CONFIG_ETHPRIME			"FEC"
+#define CONFIG_FEC_MXC_PHYADDR		1
+
+#define CONFIG_PHYLIB
+#define CONFIG_PHY_MICREL
+
+#ifdef CONFIG_SPI_FLASH
+#define CONFIG_CMD_SF
+#define CONFIG_MXC_SPI
+#define CONFIG_SPI_FLASH_EON
+#define CONFIG_SF_DEFAULT_BUS		1
+#define CONFIG_SF_DEFAULT_CS		0
+#define CONFIG_SF_DEFAULT_SPEED		25000000
+#define CONFIG_SF_DEFAULT_MODE		SPI_MODE_0
+#endif
+
+#define CONFIG_HOSTNAME		mx6exceet
+#define CONFIG_UBI_PART		ubi
+#define CONFIG_UBIFS_VOLUME	rootfs0
+
+#define MTDIDS_DEFAULT		"nand0=nand0"
+/* #define MTDPARTS_DEFAULT	"mtdparts=gpmi-nand:-(ubi)" */
+#define MTDPARTS_DEFAULT	"mtdparts=nand0:-@0x0(nandflash)"
+
+/* Command definition */
+#define CONFIG_CMD_BMODE
+
+#ifdef CONFIG_SUPPORT_EMMC_BOOT
+#define EMMC_ENV \
+	"emmcdev=1\0" \
+	"update_emmc_firmware=" \
+		"if test ${ip_dyn} = yes; then " \
+			"setenv get_cmd dhcp; " \
+		"else " \
+			"setenv get_cmd tftp; " \
+		"fi; " \
+		"if ${get_cmd} ${update_sd_firmware_filename}; then " \
+			"if mmc dev ${emmcdev} 1; then "	\
+				"setexpr fw_sz ${filesize} / 0x200; " \
+				"setexpr fw_sz ${fw_sz} + 1; "	\
+				"mmc write ${loadaddr} 0x2 ${fw_sz}; " \
+			"fi; "	\
+		"fi\0"
+#else
+#define EMMC_ENV ""
+#endif
+
+#define CONFIG_ENV_VARS_UBOOT_RUNTIME_CONFIG
+
+#ifndef VIDEO_ARGS
+#define VIDEO_ARGS ""
+#endif
+
+#ifndef VIDEO_ARGS_SCRIPT
+#define VIDEO_ARGS_SCRIPT ""
+#endif
+
+#define CONFIG_EXTRA_ENV_SETTINGS \
+	"script=boot.scr\0" \
+	"image=zImage\0" \
+	"fdt_file=undefined\0" \
+	"fdt_addr=0x18000000\0" \
+	"boot_devices=mmc net ubi\0" \
+	"boot_fdt=try\0" \
+	"ip_dyn=no\0" \
+	"console=" CONFIG_CONSOLE_DEV "\0" \
+	"dfuspi=dfu 0 sf 0:0:10000000:0\0" \
+	"dfu_alt_info_spl=spl raw 0x400\0" \
+	"dfu_alt_info_img=u-boot raw 0x10000\0" \
+	"dfu_alt_info=spl raw 0x400\0" \
+	"ethaddr=70:82:0E:99:90:04\0" \
+	"fdt_high=0xffffffff\0"	  \
+	"initrd_high=0xffffffff\0" \
+	"mtdids=" MTDIDS_DEFAULT "\0" \
+	"mtdparts=" MTDPARTS_DEFAULT "\0" \
+	"mmcdev=" __stringify(MMC_BOOT_DEV) "\0" \
+	"mmcpart=1\0" \
+	"mmcroot=" CONFIG_MMCROOT " rootwait rw\0" \
+	"usbdev=0\0" \
+	"usbpart=1\0" \
+	"usbroot=/dev/sda2 rootwait rw\0" \
+	"usbargs=setenv bootargs console=${console},${baudrate} root=${usbroot} ${video_args}\0" \
+	"usb_loadfdt=fatload usb ${usbdev}:${usbpart} ${fdt_addr} ${fdt_file}\0" \
+	"usb_loadimage=fatload usb ${usbdev}:${usbpart} ${loadaddr} ${image}\0" \
+	"usbboot=echo Booting from usb ...; run video_args_script; run usbargs; usb start; run usb_loadfdt; run usb_loadimage; bootz ${loadaddr} - ${fdt_addr}\0" \
+	"emmcdev=1\0" \
+	"emmcpart=1\0" \
+	"emmcroot=/dev/mmcblk0p1 rootwait rw\0" \
+	"emmcargs=setenv bootargs console=${console},${baudrate} root=${emmcroot} ${video_args}\0" \
+	"emmc_loadfdt=ext4load mmc ${emmcdev}:${emmcpart} ${fdt_addr} /boot/${fdt_file}\0" \
+	"emmc_loadimage=ext4load mmc ${emmcdev}:${emmcpart} ${loadaddr} /boot/${image}\0" \
+	"emmcboot=echo Booting from emmc ...; run video_args_script; run emmcargs; run emmc_loadfdt; run emmc_loadimage; bootz ${loadaddr} - ${fdt_addr}\0" \
+	"nfsroot=/nfsroot\0" \
+	"serverip=192.168.1.10\0" \
+	"ipaddr=192.168.1.11\0" \
+	"gatewayip=192.168.1.10\0" \
+	"netmask=255.255.255.0\0" \
+	"update_sd_firmware=" \
+		"if test ${ip_dyn} = yes; then " \
+			"setenv get_cmd dhcp; " \
+		"else " \
+			"setenv get_cmd tftp; " \
+		"fi; " \
+		"if mmc dev ${mmcdev}; then "	\
+			"if ${get_cmd} ${update_sd_firmware_filename}; then " \
+				"setexpr fw_sz ${filesize} / 0x200; " \
+				"setexpr fw_sz ${fw_sz} + 1; "	\
+				"mmc write ${loadaddr} 0x2 ${fw_sz}; " \
+			"fi; "	\
+		"fi\0" \
+	EMMC_ENV	  \
+	"video_args_hdmi=setenv video_args $video_args " \
+		"video=mxcfb${fb}:dev=hdmi,1920x1080M@60,if=RGB24\0" \
+	"video_args_lvds=setenv video_args $video_args " \
+		"video=mxcfb${fb}:dev=ldb,LDB-XGA,if=RGB666\0" \
+	"video_args_lcd=setenv video_args $video_args " \
+		"video=mxcfb${fb}:dev=lcd,800x480M@60,if=RGB666\0" \
+	"fb=0\0" \
+	"video_interfaces=hdmi lvds lcd\0" \
+	"video_args_script=" \
+		"setexpr fb 0; " \
+		"setenv videoargs; " \
+		"for v in ${video_interfaces}; do " \
+			"run video_args_${v}; " \
+			"setexpr fb $fb + 1; " \
+		"done\0" \
+	"ubiargs=setenv bootargs console=${console},${baudrate} " \
+		"rootfstype=ubifs ubi.mtd=0 root=ubi0_0 rw " \
+		VIDEO_ARGS "\0" \
+	"ubiboot=echo Booting from ubi/flash ...; " \
+		VIDEO_ARGS_SCRIPT \
+		"run ubiargs; " \
+		"ubi part nandflash; " \
+		"ubifsmount ubi0:rootfs; " \
+		"run ubiloadimage; " \
+		"if test ${boot_fdt} = yes || test ${boot_fdt} = try; then " \
+			"if run ubiloadfdt; then " \
+				"bootz ${loadaddr} - ${fdt_addr}; " \
+			"else " \
+				"if test ${boot_fdt} = try; then " \
+					"bootz; " \
+				"else " \
+					"echo WARN: Cannot load the DT; " \
+				"fi; " \
+			"fi; " \
+		"else " \
+			"bootz; " \
+		"fi;\0" \
+	"ubiloadimage=ubifsload ${loadaddr} /boot/${image}\0" \
+	"ubiloadfdt=ubifsload ${fdt_addr} /boot/${fdt_file}\0" \
+	"mmcargs=setenv bootargs console=${console},${baudrate} " \
+		"root=${mmcroot} " \
+		VIDEO_ARGS "\0" \
+	"loadbootscript=" \
+		"fatload mmc ${mmcdev}:${mmcpart} ${loadaddr} ${script};\0" \
+	"bootscript=echo Running bootscript from mmc ...; " \
+		"source\0" \
+	"mmcloadimage=fatload mmc ${mmcdev}:${mmcpart} ${loadaddr} ${image}\0" \
+	"mmcloadfdt=fatload mmc ${mmcdev}:${mmcpart} ${fdt_addr} ${fdt_file}\0" \
+	"mmcboot=echo Booting from mmc ...; " \
+		VIDEO_ARGS_SCRIPT \
+		"run mmcargs; " \
+		"run mmcloadimage; " \
+		"if test ${boot_fdt} = yes || test ${boot_fdt} = try; then " \
+			"if run mmcloadfdt; then " \
+				"bootz ${loadaddr} - ${fdt_addr}; " \
+			"else " \
+				"if test ${boot_fdt} = try; then " \
+					"bootz; " \
+				"else " \
+					"echo WARN: Cannot load the DT; " \
+				"fi; " \
+			"fi; " \
+		"else " \
+			"bootz; " \
+		"fi;\0" \
+	"netargs=setenv bootargs console=${console},${baudrate} " \
+		"root=/dev/nfs rw " \
+		"ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}:eth0:any: " \
+		"nfsroot=${serverip}:${nfsroot},v3,tcp " \
+		VIDEO_ARGS "\0" \
+	"netboot=echo Booting from net ...; " \
+		VIDEO_ARGS_SCRIPT \
+		"run netargs; " \
+		"if test ${ip_dyn} = yes; then " \
+			"setenv get_cmd dhcp; " \
+		"else " \
+			"setenv get_cmd tftp; " \
+		"fi; " \
+		"${get_cmd} ${image}; " \
+		"if test ${boot_fdt} = yes || test ${boot_fdt} = try; then " \
+			"if ${get_cmd} ${fdt_addr} ${image}-${fdt_file}; then " \
+				"bootz ${loadaddr} - ${fdt_addr}; " \
+			"else " \
+				"if test ${boot_fdt} = try; then " \
+					"bootz; " \
+				"else " \
+					"echo WARN: Cannot load the DT; " \
+				"fi; " \
+			"fi; " \
+		"else " \
+			"bootz; " \
+		"fi;\0" \
+		"findfdt="\
+			"if test $fdt_file = undefined; then " \
+				"if test $board_name = MX6EXCEET && test $board_rev = MX6QP; then " \
+					"setenv fdt_file imx6qp-exceet.dtb; fi; " \
+				"if test $board_name = MX6EXCEET && test $board_rev = MX6Q; then " \
+					"setenv fdt_file imx6q-exceet.dtb; fi; " \
+				"if test $board_name = MX6EXCEET && test $board_rev = MX6DL; then " \
+					"setenv fdt_file imx6dl-exceet.dtb; fi; " \
+				"if test $fdt_file = undefined; then " \
+					"echo WARNING: Could not determine dtb to use; fi; " \
+			"fi;\0" \
+
+
+#define CONFIG_BOOTCOMMAND \
+	"run findfdt; " \
+	"for b in ${boot_devices}; do " \
+		"if test ${b} = mmc; then " \
+			"run mmcboot; " \
+		"fi; " \
+		"if test ${b} = net; then " \
+			"run netboot; " \
+		"fi; " \
+		"if test ${b} = emmc; then " \
+			"run emmcboot; " \
+		"fi; " \
+		"if test ${b} = ubi; then " \
+			"run ubiboot; " \
+		"fi; " \
+	"done; "
+
+#define CONFIG_ARP_TIMEOUT     200UL
+
+#define CONFIG_SYS_MEMTEST_START       0x10000000
+#define CONFIG_SYS_MEMTEST_END         0x10010000
+#define CONFIG_SYS_MEMTEST_SCRATCH     0x10800000
+
+#define CONFIG_STACKSIZE               (128 * 1024)
+
+/* Physical Memory Map */
+#define CONFIG_NR_DRAM_BANKS           1
+#define PHYS_SDRAM                     MMDC0_ARB_BASE_ADDR
+
+#define CONFIG_SYS_SDRAM_BASE          PHYS_SDRAM
+#define CONFIG_SYS_INIT_RAM_ADDR       IRAM_BASE_ADDR
+#define CONFIG_SYS_INIT_RAM_SIZE       IRAM_SIZE
+
+#define CONFIG_SYS_INIT_SP_OFFSET \
+	(CONFIG_SYS_INIT_RAM_SIZE - GENERATED_GBL_DATA_SIZE)
+#define CONFIG_SYS_INIT_SP_ADDR \
+	(CONFIG_SYS_INIT_RAM_ADDR + CONFIG_SYS_INIT_SP_OFFSET)
+
+/* FLASH and environment organization */
+#define CONFIG_SYS_NO_FLASH
+
+/* Enable NAND support */
+#define CONFIG_CMD_NAND
+#define CONFIG_CMD_NAND_TRIMFFS
+#define CONFIG_CMD_TIME
+
+/* NAND stuff */
+#define CONFIG_NAND_MXS
+#define CONFIG_SYS_MAX_NAND_DEVICE	1
+#define CONFIG_SYS_NAND_BASE		0x40000000
+#define CONFIG_SYS_NAND_5_ADDR_CYCLE
+#define CONFIG_SYS_NAND_ONFI_DETECTION
+
+/* DMA stuff, needed for GPMI/MXS NAND support */
+#define CONFIG_APBH_DMA
+#define CONFIG_APBH_DMA_BURST
+#define CONFIG_APBH_DMA_BURST8
+
+/* Environment organization */
+
+/* allow to overwrite serial and ethaddr */
+#define CONFIG_ENV_OVERWRITE
+#define CONFIG_CONS_INDEX		1
+#define CONFIG_BAUDRATE			115200
+
+#if !defined(CONFIG_ENV_IS_IN_MMC)
+#define CONFIG_ENV_IS_IN_SPI_FLASH
+#endif
+
+#define CONFIG_ENV_SECT_SIZE		(64 << 10)
+#define CONFIG_ENV_SIZE         	CONFIG_ENV_SECT_SIZE
+
+#if defined(CONFIG_ENV_IS_IN_MMC)
+/* Environment in MMC */
+#define CONFIG_ENV_OFFSET			(768 << 10)
+#elif defined(CONFIG_ENV_IS_IN_SPI_FLASH)
+/* Environment in SPI FLASH */
+#define CONFIG_ENV_OFFSET		((1024 << 10) - CONFIG_ENV_SIZE)
+#define CONFIG_ENV_SPI_BUS		CONFIG_SF_DEFAULT_BUS
+#define CONFIG_ENV_SPI_CS		CONFIG_SF_DEFAULT_CS
+#define CONFIG_ENV_SPI_MODE		CONFIG_SF_DEFAULT_MODE
+#define CONFIG_ENV_SPI_MAX_HZ	CONFIG_SF_DEFAULT_SPEED
+#endif
+
+/* Framebuffer */
+#define CONFIG_VIDEO
+#define CONFIG_VIDEO_IPUV3
+#define CONFIG_CFB_CONSOLE
+#define CONFIG_VGA_AS_SINGLE_DEVICE
+#define CONFIG_SYS_CONSOLE_IS_IN_ENV
+#define CONFIG_SYS_CONSOLE_OVERWRITE_ROUTINE
+#define CONFIG_VIDEO_BMP_RLE8
+#define CONFIG_SPLASH_SCREEN
+#define CONFIG_SPLASH_SCREEN_ALIGN
+#define CONFIG_BMP_16BPP
+#define CONFIG_VIDEO_LOGO
+#define CONFIG_VIDEO_BMP_LOGO
+#define CONFIG_IPUV3_CLK 260000000
+/*
+#define CONFIG_IMX_HDMI
+*/
+#define CONFIG_IMX_VIDEO_SKIP
+
+#ifndef CONFIG_SPL
+#define CONFIG_CI_UDC
+#define CONFIG_USBD_HS
+#define CONFIG_USB_GADGET_DUALSPEED
+
+#define CONFIG_USB_GADGET
+#define CONFIG_CMD_USB_MASS_STORAGE
+#define CONFIG_USB_FUNCTION_MASS_STORAGE
+#define CONFIG_USB_GADGET_DOWNLOAD
+#define CONFIG_USB_GADGET_VBUS_DRAW	2
+
+#define CONFIG_G_DNL_VENDOR_NUM		0x0525
+#define CONFIG_G_DNL_PRODUCT_NUM	0xa4a5
+#define CONFIG_G_DNL_MANUFACTURER	"FSL"
+
+#define CONFIG_USB_FUNCTION_FASTBOOT
+#define CONFIG_CMD_FASTBOOT
+#define CONFIG_ANDROID_BOOT_IMAGE
+#define CONFIG_FASTBOOT_BUF_ADDR   CONFIG_SYS_LOAD_ADDR
+#define CONFIG_FASTBOOT_BUF_SIZE   0x07000000
+
+/* USB Device Firmware Update support */
+#define CONFIG_CMD_DFU
+#define CONFIG_USB_FUNCTION_DFU
+#define CONFIG_DFU_MMC
+#define CONFIG_DFU_SF
+#endif
+
+/* UBI/UBIFS config options */
+#define CONFIG_LZO
+#define CONFIG_MTD_DEVICE
+#define CONFIG_MTD_PARTITIONS
+#define CONFIG_RBTREE
+#define CONFIG_CMD_MTDPARTS
+#define CONFIG_CMD_UBI
+#define CONFIG_CMD_UBIFS
+#define CONFIG_UBI_SILENCE_MSG
+
+#define CONFIG_OF_LIBFDT
+#define CONFIG_CMD_BOOTZ
+
+#ifndef CONFIG_SYS_DCACHE_OFF
+#define CONFIG_CMD_CACHE
+#endif
+
+#endif                         /* __MX6EXCEET_COMMON_CONFIG_H */
diff --git a/tools/Kconfig b/tools/Kconfig
index 667807b331..7f38c93d0a 100644
--- a/tools/Kconfig
+++ b/tools/Kconfig
@@ -16,7 +16,7 @@ config TOOLS_CRC32
 
 config TOOLS_LIBCRYPTO
 	bool "Use OpenSSL's libcrypto library for host tools"
-	default y
+	default n
 	help
 	  Cryptographic signature, verification, and encryption of images is
 	  provided by host tools using OpenSSL's libcrypto. Select 'n' here if
@@ -27,7 +27,7 @@ config TOOLS_LIBCRYPTO
 
 config TOOLS_KWBIMAGE
 	bool "Enable kwbimage support in host tools"
-	default y
+	default n
 	select TOOLS_LIBCRYPTO
 
 config TOOLS_FIT
-- 
2.34.1

