* Random notes
** Resize partion on boot
  + https://issues.guix.gnu.org/69090
** Deployment
 + https://stumbles.id.au/getting-started-with-guix-deploy.htmlw
 + Remote deploy from x86 to aarch64 needs binfmt on host. Could not
   get it to run with wsl-guix or guix on foreign distribution on
   wsl2. The only option that seems to work is to start the daemon
   with `--disable-chroot`. However after this deployment will fail
   with `guix deploy: error: failed to deploy pi4: missing modules for
   #<file-system-label "RASPIROOT">: uio_pdrv_genirq`. Workaround is
   described [[https://www.mail-archive.com/search?l=help-guix@gnu.org&q=subject:%22Re%5C%3A+Guix+deploy+fails+claiming+some+module+missing%22&o=newest&f=1][here]].
** Tutorial for guix system api
  + https://othacehe.org/the-guix-system-image-api.html
  + [[https://github.com/pjotrp/guix-notes/blob/master/HACKING.org#in-progress-using-guile-in-emacs-geiser][Hacking guix]]
  + https://www.futurile.net/2023/12/05/guix-package-transformations/
  + [[https://patchwork.ozlabs.org/project/uboot/patch/1390506927-15687-1-git-send-email-swarren@wwwdotorg.org/][Desc algo to search fdt file from kernel folder]]
* Commandline
 + Build rpi image
  #+begin_src sh
    # Generate rasp image Use no graft to prevent hitting
    # cross-compiliation bug). See https://issues.guix.gnu.org/66866
    guix system image raspberry-pi.scm --skip-checks --verbosity=3 --no-grafts -e raspberry-pi-barebones-raw-image
    # Deploy guix image
  #+end_src
 + Build touscreen image
 #+begin_src sh
   # normal image build
   guix system image  kernel.scm --target=arm-linux-gnueabihf -v3 -c2 -M2 -K --no-grafts
   # build in container
   guix shell --container --network --share=/var/guix/daemon-socket/socket --share=/etc/ssl/certs guix guile coreutils

 #+end_src
 + Mount disk image to loop back
 #+begin_src sh
   #Get boot partition offset
   fdisk -lu /path/to/disk
   #The offset value is in bytes, whereas fdisk shows a block count, so
   #you should multiply the value from the "Begin" or "Start" column of
   #the fdisk output by 512 (or whatever the block size is) to obtain the
   #offset to mount at.
   mount -o loop,offset=xxxx /path/to/disk mnt
 #+end_src

